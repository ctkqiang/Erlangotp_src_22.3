/*
 *  Warning: Do not edit this file.
 *  Auto-generated by 'beam_makeops'.
 */

#ifndef __OPCODES_H__
#define __OPCODES_H__

#define BEAM_FORMAT_NUMBER 0
#define MAX_GENERIC_OPCODE 168
#define NUM_GENERIC_OPS 384
#define NUM_SPECIFIC_OPS 468
#define SCRATCH_X_REG 1023

#if !defined(ARCH_64)
  #error "64-bit architecture assumed, but ARCH_64 not defined"
#endif
#if !defined(CODE_MODEL_SMALL)
  #error "small code model assumed, but CODE_MODEL_SMALL not defined"
#endif
#define BEAM_WIDE_MASK 0xFFFFFFFFull
#define BEAM_LOOSE_MASK 0xFFFFull
#define BEAM_TIGHT_MASK 0xFFFFull
#define BEAM_TIGHTEST_MASK 0x3FFull
#define BEAM_WIDE_SHIFT 32
#define BEAM_LOOSE_SHIFT 16
#define BEAM_TIGHT_SHIFT 16
#define BEAM_TIGHTEST_SHIFT 10

/*
 * The following operand types for generic instructions
 * occur in beam files.
 */

#define TAG_u 0
#define TAG_i 1
#define TAG_a 2
#define TAG_x 3
#define TAG_y 4
#define TAG_f 5
#define TAG_h 6
#define TAG_z 7

/*
 * The following operand types are only used in the loader.
 */

#define TAG_n 8
#define TAG_p 9
#define TAG_r 10
#define TAG_v 11
#define TAG_l 12
#define TAG_q 13
#define TAG_o 14

#define BEAM_NUM_TAGS 15

#define TOP_call_end 0
#define TOP_commit 1
#define TOP_end 2
#define TOP_fail 3
#define TOP_is_bif 4
#define TOP_is_func 5
#define TOP_is_not_bif 6
#define TOP_is_same_var 7
#define TOP_is_type 8
#define TOP_is_type_eq 9
#define TOP_keep 10
#define TOP_new_instr 11
#define TOP_next_arg 12
#define TOP_next_instr 13
#define TOP_pred 14
#define TOP_rename 15
#define TOP_rest_args 16
#define TOP_set_var_next_arg 17
#define TOP_store_rest_args 18
#define TOP_store_type 19
#define TOP_store_val 20
#define TOP_store_var_next_arg 21
#define TOP_try_me_else 22
#define TOP_try_me_else_fail 23
#define NUM_TOPS 24

#define TE_MAX_VARS 8

extern const char tag_to_letter[];
extern const Uint op_transform[];

#define op_allocate_tt 0
#define op_allocate_heap_tIt 1
#define op_allocate_heap_zero_tIt 2
#define op_allocate_init_tty 3
#define op_allocate_zero_tt 4
#define op_apply_t 5
#define op_apply_bif 6
#define op_apply_last_tQ 7
#define op_badarg_j 8
#define op_badmatch_x 9
#define op_bs_add_jsstx 10
#define op_bs_context_to_binary_x 11
#define op_bs_get_tail_xdt 12
#define op_bs_get_tail_ydt 13
#define op_bs_init_writable 14
#define op_bs_put_string_WW 15
#define op_bs_put_utf16_jtS 16
#define op_bs_set_position_xx 17
#define op_bs_set_position_xy 18
#define op_bs_set_position_yx 19
#define op_bs_set_position_yy 20
#define op_bs_test_tail_imm2_fxW 21
#define op_bs_test_tail_imm2_fyW 22
#define op_bs_test_unit_fxt 23
#define op_bs_test_unit_fyt 24
#define op_bs_test_unit8_fx 25
#define op_bs_test_unit8_fy 26
#define op_bs_test_zero_tail2_fx 27
#define op_bs_test_zero_tail2_fy 28
#define op_build_stacktrace 29
#define op_call_bif_e 30
#define op_call_bif_only_e 31
#define op_call_error_handler 32
#define op_call_nif 33
#define op_case_end_x 34
#define op_catch_yf 35
#define op_catch_end_y 36
#define op_cold_is_function2_fxx 37
#define op_continue_exit 38
#define op_deallocate_Q 39
#define op_deallocate_return_Q 40
#define op_ensure_map_x 41
#define op_error_action_code 42
#define op_fconv_Sl 43
#define op_fload_ql 44
#define op_fload_Sl 45
#define op_fstore_ld 46
#define op_get_hd_xx 47
#define op_get_hd_xy 48
#define op_get_hd_yx 49
#define op_get_hd_yy 50
#define op_get_list_rry 51
#define op_get_list_rxr 52
#define op_get_list_rxx 53
#define op_get_list_rxy 54
#define op_get_list_ryr 55
#define op_get_list_xrx 56
#define op_get_list_xxx 57
#define op_get_list_xxy 58
#define op_get_list_xyx 59
#define op_get_list_xyy 60
#define op_get_list_yxx 61
#define op_get_list_yxy 62
#define op_get_list_yyx 63
#define op_get_list_yyy 64
#define op_get_tl_xx 65
#define op_get_tl_xy 66
#define op_get_tl_yx 67
#define op_get_tl_yy 68
#define op_hipe_call_count 69
#define op_hipe_trap_call 70
#define op_hipe_trap_call_closure 71
#define op_hipe_trap_resume 72
#define op_hipe_trap_return 73
#define op_hipe_trap_throw 74
#define op_hot_is_function2_fSt 75
#define op_i_apply 76
#define op_i_apply_fun 77
#define op_i_apply_fun_last_Q 78
#define op_i_apply_fun_only 79
#define op_i_apply_last_Q 80
#define op_i_apply_only 81
#define op_i_band_xcjd 82
#define op_i_band_ssjd 83
#define op_i_bif1_sfbd 84
#define op_i_bif1_body_sbd 85
#define op_i_bif2_ssfbd 86
#define op_i_bif2_body_ssbd 87
#define op_i_bif3_sssfbd 88
#define op_i_bif3_body_sssbd 89
#define op_i_bor_jssd 90
#define op_i_bs_append_jIttsx 91
#define op_i_bs_append_jIttsy 92
#define op_i_bs_get_binary2_xftstd 93
#define op_i_bs_get_binary2_yftstd 94
#define op_i_bs_get_binary_all2_xfttd 95
#define op_i_bs_get_binary_all2_yfttd 96
#define op_i_bs_get_binary_imm2_xftWtd 97
#define op_i_bs_get_binary_imm2_yftWtd 98
#define op_i_bs_get_float2_xftstd 99
#define op_i_bs_get_float2_yftstd 100
#define op_i_bs_get_integer_xfttsd 101
#define op_i_bs_get_integer_yfttsd 102
#define op_i_bs_get_integer_16_xfd 103
#define op_i_bs_get_integer_16_yfd 104
#define op_i_bs_get_integer_32_xfd 105
#define op_i_bs_get_integer_32_yfd 106
#define op_i_bs_get_integer_8_xfd 107
#define op_i_bs_get_integer_8_yfd 108
#define op_i_bs_get_integer_imm_xWtftx 109
#define op_i_bs_get_integer_imm_yWtftx 110
#define op_i_bs_get_integer_small_imm_xWftx 111
#define op_i_bs_get_integer_small_imm_yWftx 112
#define op_i_bs_get_position_xx 113
#define op_i_bs_get_position_xy 114
#define op_i_bs_get_position_yx 115
#define op_i_bs_get_position_yy 116
#define op_i_bs_get_utf16_xftd 117
#define op_i_bs_get_utf16_yftd 118
#define op_i_bs_get_utf8_xfd 119
#define op_i_bs_get_utf8_yfd 120
#define op_i_bs_init_Wtx 121
#define op_i_bs_init_bits_Wtx 122
#define op_i_bs_init_bits_fail_xjtx 123
#define op_i_bs_init_bits_fail_yjtx 124
#define op_i_bs_init_bits_fail_heap_sIjtx 125
#define op_i_bs_init_bits_heap_WItx 126
#define op_i_bs_init_fail_xjtx 127
#define op_i_bs_init_fail_yjtx 128
#define op_i_bs_init_fail_heap_sIjtx 129
#define op_i_bs_init_heap_WItx 130
#define op_i_bs_match_string_xfWW 131
#define op_i_bs_match_string_yfWW 132
#define op_i_bs_private_append_jtsSx 133
#define op_i_bs_put_utf8_jS 134
#define op_i_bs_restore2_xt 135
#define op_i_bs_save2_xt 136
#define op_i_bs_skip_bits2_xxft 137
#define op_i_bs_skip_bits2_xyft 138
#define op_i_bs_skip_bits2_yxft 139
#define op_i_bs_skip_bits2_yyft 140
#define op_i_bs_skip_bits_imm2_fxW 141
#define op_i_bs_skip_bits_imm2_fyW 142
#define op_i_bs_start_match2_xfttd 143
#define op_i_bs_start_match2_yfttd 144
#define op_i_bs_start_match3_xtfd 145
#define op_i_bs_start_match3_ytfd 146
#define op_i_bs_start_match3_gp_xtfdx 147
#define op_i_bs_start_match3_gp_ytfdx 148
#define op_i_bs_utf16_size_Sx 149
#define op_i_bs_utf8_size_Sx 150
#define op_i_bs_validate_unicode_jS 151
#define op_i_bs_validate_unicode_retract_jsS 152
#define op_i_bsl_ssjd 153
#define op_i_bsr_ssjd 154
#define op_i_bxor_jssd 155
#define op_i_call_f 156
#define op_i_call_ext_e 157
#define op_i_call_ext_last_eQ 158
#define op_i_call_ext_only_e 159
#define op_i_call_fun_t 160
#define op_i_call_fun_last_tQ 161
#define op_i_call_last_fQ 162
#define op_i_call_only_f 163
#define op_i_debug_breakpoint 164
#define op_i_element_xjsd 165
#define op_i_element_yjsd 166
#define op_i_fadd_lll 167
#define op_i_fast_element_xjId 168
#define op_i_fast_element_yjId 169
#define op_i_fdiv_lll 170
#define op_i_fmul_lll 171
#define op_i_fnegate_ll 172
#define op_i_fsub_lll 173
#define op_i_func_info_IaaI 174
#define op_i_generic_breakpoint 175
#define op_i_get_sd 176
#define op_i_get_hash_cId 177
#define op_i_get_map_element_fxxx 178
#define op_i_get_map_element_fxxy 179
#define op_i_get_map_element_fxyx 180
#define op_i_get_map_element_fxyy 181
#define op_i_get_map_element_fyxx 182
#define op_i_get_map_element_fyxy 183
#define op_i_get_map_element_fyyx 184
#define op_i_get_map_element_fyyy 185
#define op_i_get_map_element_hash_fxcIx 186
#define op_i_get_map_element_hash_fxcIy 187
#define op_i_get_map_element_hash_fycIx 188
#define op_i_get_map_element_hash_fycIy 189
#define op_i_get_map_elements_fsI 190
#define op_i_get_tuple_element_xPx 191
#define op_i_get_tuple_element_xPy 192
#define op_i_get_tuple_element_yPx 193
#define op_i_get_tuple_element_yPy 194
#define op_i_get_tuple_element2_xPx 195
#define op_i_get_tuple_element2_dst_xPxx 196
#define op_i_get_tuple_element2_dst_xPyy 197
#define op_i_get_tuple_element3_xPx 198
#define op_i_hibernate 199
#define op_i_increment_rWd 200
#define op_i_increment_xWd 201
#define op_i_increment_yWd 202
#define op_i_int_bnot_jSd 203
#define op_i_int_div_jssd 204
#define op_i_is_eq_exact_immed_frc 205
#define op_i_is_eq_exact_immed_fxc 206
#define op_i_is_eq_exact_immed_fyc 207
#define op_i_is_eq_exact_literal_fxc 208
#define op_i_is_eq_exact_literal_fyc 209
#define op_i_is_ne_exact_immed_fxc 210
#define op_i_is_ne_exact_immed_fyc 211
#define op_i_is_ne_exact_literal_fxc 212
#define op_i_is_ne_exact_literal_fyc 213
#define op_i_jump_on_val_xfIW 214
#define op_i_jump_on_val_yfIW 215
#define op_i_jump_on_val_zero_xfI 216
#define op_i_jump_on_val_zero_yfI 217
#define op_i_length_jtd 218
#define op_i_length_setup_tx 219
#define op_i_length_setup_ty 220
#define op_i_loop_rec_f 221
#define op_i_m_div_jssd 222
#define op_i_make_fun_Wt 223
#define op_i_minus_xxjd 224
#define op_i_minus_xyjd 225
#define op_i_minus_yxjd 226
#define op_i_minus_yyjd 227
#define op_i_minus_cxjd 228
#define op_i_minus_cyjd 229
#define op_i_move_call_ext_ce 230
#define op_i_move_call_ext_last_eQc 231
#define op_i_move_call_ext_only_ec 232
#define op_i_new_bs_put_binary_jStS 233
#define op_i_new_bs_put_binary_all_xjt 234
#define op_i_new_bs_put_binary_all_yjt 235
#define op_i_new_bs_put_binary_imm_jWS 236
#define op_i_new_bs_put_float_jSts 237
#define op_i_new_bs_put_float_imm_jWts 238
#define op_i_new_bs_put_integer_jSts 239
#define op_i_new_bs_put_integer_imm_xjWt 240
#define op_i_new_bs_put_integer_imm_yjWt 241
#define op_i_new_bs_put_integer_imm_cjWt 242
#define op_i_new_small_map_lit_dtq 243
#define op_i_perf_counter 244
#define op_i_plus_xxjd 245
#define op_i_plus_xyjd 246
#define op_i_plus_yxjd 247
#define op_i_plus_yyjd 248
#define op_i_plus_xcjd 249
#define op_i_plus_ycjd 250
#define op_i_raise 251
#define op_i_recv_mark 252
#define op_i_recv_set 253
#define op_i_rem_xxjd 254
#define op_i_rem_ssjd 255
#define op_i_return_time_trace 256
#define op_i_return_to_trace 257
#define op_i_select_tuple_arity_xfI 258
#define op_i_select_tuple_arity_yfI 259
#define op_i_select_tuple_arity2_xfAA 260
#define op_i_select_tuple_arity2_yfAA 261
#define op_i_select_val2_xfcc 262
#define op_i_select_val2_yfcc 263
#define op_i_select_val_bins_xfI 264
#define op_i_select_val_bins_yfI 265
#define op_i_select_val_lins_xfI 266
#define op_i_select_val_lins_yfI 267
#define op_i_times_jssd 268
#define op_i_trim_t 269
#define op_i_wait_error 270
#define op_i_wait_error_locked 271
#define op_i_yield 272
#define op_if_end 273
#define op_init_y 274
#define op_init2_yy 275
#define op_init3_yyy 276
#define op_init_seq3_y 277
#define op_init_seq4_y 278
#define op_init_seq5_y 279
#define op_int_code_end 280
#define op_is_atom_fx 281
#define op_is_atom_fy 282
#define op_is_binary_fx 283
#define op_is_binary_fy 284
#define op_is_bitstring_fx 285
#define op_is_bitstring_fy 286
#define op_is_boolean_fx 287
#define op_is_boolean_fy 288
#define op_is_eq_fSs 289
#define op_is_eq_exact_fxx 290
#define op_is_eq_exact_fxy 291
#define op_is_eq_exact_fyy 292
#define op_is_float_fx 293
#define op_is_float_fy 294
#define op_is_function_fx 295
#define op_is_function_fy 296
#define op_is_ge_fxx 297
#define op_is_ge_fxc 298
#define op_is_ge_fcx 299
#define op_is_ge_fss 300
#define op_is_integer_fx 301
#define op_is_integer_fy 302
#define op_is_integer_allocate_fxtt 303
#define op_is_list_fx 304
#define op_is_list_fy 305
#define op_is_lt_fxx 306
#define op_is_lt_fxc 307
#define op_is_lt_fcx 308
#define op_is_lt_fss 309
#define op_is_map_fx 310
#define op_is_map_fy 311
#define op_is_ne_fSs 312
#define op_is_ne_exact_fSS 313
#define op_is_nil_fx 314
#define op_is_nil_fy 315
#define op_is_nonempty_list_fx 316
#define op_is_nonempty_list_fy 317
#define op_is_nonempty_list_allocate_frtt 318
#define op_is_nonempty_list_allocate_fxtt 319
#define op_is_nonempty_list_get_hd_fxx 320
#define op_is_nonempty_list_get_list_frxx 321
#define op_is_nonempty_list_get_list_fxxx 322
#define op_is_nonempty_list_get_tl_fxx 323
#define op_is_number_fx 324
#define op_is_number_fy 325
#define op_is_pid_fx 326
#define op_is_pid_fy 327
#define op_is_port_fx 328
#define op_is_port_fy 329
#define op_is_reference_fx 330
#define op_is_reference_fy 331
#define op_is_tagged_tuple_frAa 332
#define op_is_tagged_tuple_fxAa 333
#define op_is_tagged_tuple_fyAa 334
#define op_is_tagged_tuple_ff_ffrAa 335
#define op_is_tagged_tuple_ff_ffxAa 336
#define op_is_tuple_fr 337
#define op_is_tuple_fx 338
#define op_is_tuple_fy 339
#define op_is_tuple_of_arity_frA 340
#define op_is_tuple_of_arity_fxA 341
#define op_is_tuple_of_arity_fyA 342
#define op_jump_f 343
#define op_label_L 344
#define op_line_I 345
#define op_loop_rec_end_f 346
#define op_move_nx 347
#define op_move_rx 348
#define op_move_ry 349
#define op_move_xr 350
#define op_move_xx 351
#define op_move_xy 352
#define op_move_yr 353
#define op_move_yx 354
#define op_move_yy 355
#define op_move_cr 356
#define op_move_cx 357
#define op_move_cy 358
#define op_move2_par_xxxx 359
#define op_move2_par_xxxy 360
#define op_move2_par_yxxx 361
#define op_move2_par_yxxy 362
#define op_move2_par_yxyx 363
#define op_move3_xxxxxx 364
#define op_move3_yxyxyx 365
#define op_move_call_xf 366
#define op_move_call_yf 367
#define op_move_call_cf 368
#define op_move_call_last_xfQ 369
#define op_move_call_last_yfQ 370
#define op_move_call_last_cfQ 371
#define op_move_call_only_xf 372
#define op_move_call_only_cf 373
#define op_move_deallocate_return_nQ 374
#define op_move_deallocate_return_xQ 375
#define op_move_deallocate_return_yQ 376
#define op_move_deallocate_return_cQ 377
#define op_move_jump_fxx 378
#define op_move_jump_fxy 379
#define op_move_jump_fyx 380
#define op_move_jump_fyy 381
#define op_move_jump_fcr 382
#define op_move_jump_fcx 383
#define op_move_jump_fcy 384
#define op_move_return_n 385
#define op_move_return_x 386
#define op_move_return_c 387
#define op_move_shift_nyx 388
#define op_move_shift_xxx 389
#define op_move_shift_xxy 390
#define op_move_shift_xyx 391
#define op_move_shift_yry 392
#define op_move_shift_yxx 393
#define op_move_shift_cxx 394
#define op_move_src_window2_yxx 395
#define op_move_src_window3_yxxx 396
#define op_move_src_window4_yxxxx 397
#define op_move_trim_yxt 398
#define op_move_window2_xxy 399
#define op_move_window3_xxxy 400
#define op_move_window4_xxxxy 401
#define op_move_window5_xxxxxy 402
#define op_move_x1_c 403
#define op_move_x2_c 404
#define op_new_map_dtI 405
#define op_node_x 406
#define op_node_y 407
#define op_normal_exit 408
#define op_on_load 409
#define op_put_list_rnr 410
#define op_put_list_rnx 411
#define op_put_list_rxr 412
#define op_put_list_rxx 413
#define op_put_list_xnx 414
#define op_put_list_xny 415
#define op_put_list_xxr 416
#define op_put_list_xxx 417
#define op_put_list_xyx 418
#define op_put_list_ynx 419
#define op_put_list_yny 420
#define op_put_list_yxx 421
#define op_put_list_yyx 422
#define op_put_list_xcx 423
#define op_put_list_ycx 424
#define op_put_list_cxx 425
#define op_put_list_cyx 426
#define op_put_list_ssd 427
#define op_put_tuple2_xI 428
#define op_put_tuple2_yI 429
#define op_raw_raise 430
#define op_remove_message 431
#define op_return 432
#define op_return_trace 433
#define op_self_x 434
#define op_self_y 435
#define op_send 436
#define op_set_tuple_element_sSP 437
#define op_swap_xx 438
#define op_swap_yx 439
#define op_swap_yy 440
#define op_swap_temp_xxx 441
#define op_system_limit_j 442
#define op_test_arity_fxA 443
#define op_test_arity_fyA 444
#define op_test_arity_get_tuple_element_fxAPx 445
#define op_test_heap_It 446
#define op_test_heap_1_put_list_Iy 447
#define op_timeout 448
#define op_timeout_locked 449
#define op_trace_jump_W 450
#define op_try_case_y 451
#define op_try_case_end_s 452
#define op_try_end_y 453
#define op_update_list_xx 454
#define op_update_list_yx 455
#define op_update_list_cx 456
#define op_update_map_assoc_xdtI 457
#define op_update_map_assoc_ydtI 458
#define op_update_map_assoc_cdtI 459
#define op_update_map_exact_xjdtI 460
#define op_update_map_exact_yjdtI 461
#define op_wait_locked_f 462
#define op_wait_timeout_locked_sf 463
#define op_wait_timeout_locked_int_If 464
#define op_wait_timeout_unlocked_sf 465
#define op_wait_timeout_unlocked_int_If 466
#define op_wait_unlocked_f 467

#define NUMBER_OF_OPCODES 468
#define op_count_allocate_tt 468
#define op_count_allocate_heap_tIt 469
#define op_count_allocate_heap_zero_tIt 470
#define op_count_allocate_init_tty 471
#define op_count_allocate_zero_tt 472
#define op_count_apply_t 473
#define op_count_apply_bif 474
#define op_count_apply_last_tQ 475
#define op_count_badarg_j 476
#define op_count_badmatch_x 477
#define op_count_bs_add_jsstx 478
#define op_count_bs_context_to_binary_x 479
#define op_count_bs_get_tail_xdt 480
#define op_count_bs_get_tail_ydt 481
#define op_count_bs_init_writable 482
#define op_count_bs_put_string_WW 483
#define op_count_bs_put_utf16_jtS 484
#define op_count_bs_set_position_xx 485
#define op_count_bs_set_position_xy 486
#define op_count_bs_set_position_yx 487
#define op_count_bs_set_position_yy 488
#define op_count_bs_test_tail_imm2_fxW 489
#define op_count_bs_test_tail_imm2_fyW 490
#define op_count_bs_test_unit_fxt 491
#define op_count_bs_test_unit_fyt 492
#define op_count_bs_test_unit8_fx 493
#define op_count_bs_test_unit8_fy 494
#define op_count_bs_test_zero_tail2_fx 495
#define op_count_bs_test_zero_tail2_fy 496
#define op_count_build_stacktrace 497
#define op_count_call_bif_e 498
#define op_count_call_bif_only_e 499
#define op_count_call_error_handler 500
#define op_count_call_nif 501
#define op_count_case_end_x 502
#define op_count_catch_yf 503
#define op_count_catch_end_y 504
#define op_count_cold_is_function2_fxx 505
#define op_count_continue_exit 506
#define op_count_deallocate_Q 507
#define op_count_deallocate_return_Q 508
#define op_count_ensure_map_x 509
#define op_count_error_action_code 510
#define op_count_fconv_Sl 511
#define op_count_fload_ql 512
#define op_count_fload_Sl 513
#define op_count_fstore_ld 514
#define op_count_get_hd_xx 515
#define op_count_get_hd_xy 516
#define op_count_get_hd_yx 517
#define op_count_get_hd_yy 518
#define op_count_get_list_rry 519
#define op_count_get_list_rxr 520
#define op_count_get_list_rxx 521
#define op_count_get_list_rxy 522
#define op_count_get_list_ryr 523
#define op_count_get_list_xrx 524
#define op_count_get_list_xxx 525
#define op_count_get_list_xxy 526
#define op_count_get_list_xyx 527
#define op_count_get_list_xyy 528
#define op_count_get_list_yxx 529
#define op_count_get_list_yxy 530
#define op_count_get_list_yyx 531
#define op_count_get_list_yyy 532
#define op_count_get_tl_xx 533
#define op_count_get_tl_xy 534
#define op_count_get_tl_yx 535
#define op_count_get_tl_yy 536
#define op_count_hipe_call_count 537
#define op_count_hipe_trap_call 538
#define op_count_hipe_trap_call_closure 539
#define op_count_hipe_trap_resume 540
#define op_count_hipe_trap_return 541
#define op_count_hipe_trap_throw 542
#define op_count_hot_is_function2_fSt 543
#define op_count_i_apply 544
#define op_count_i_apply_fun 545
#define op_count_i_apply_fun_last_Q 546
#define op_count_i_apply_fun_only 547
#define op_count_i_apply_last_Q 548
#define op_count_i_apply_only 549
#define op_count_i_band_xcjd 550
#define op_count_i_band_ssjd 551
#define op_count_i_bif1_sfbd 552
#define op_count_i_bif1_body_sbd 553
#define op_count_i_bif2_ssfbd 554
#define op_count_i_bif2_body_ssbd 555
#define op_count_i_bif3_sssfbd 556
#define op_count_i_bif3_body_sssbd 557
#define op_count_i_bor_jssd 558
#define op_count_i_bs_append_jIttsx 559
#define op_count_i_bs_append_jIttsy 560
#define op_count_i_bs_get_binary2_xftstd 561
#define op_count_i_bs_get_binary2_yftstd 562
#define op_count_i_bs_get_binary_all2_xfttd 563
#define op_count_i_bs_get_binary_all2_yfttd 564
#define op_count_i_bs_get_binary_imm2_xftWtd 565
#define op_count_i_bs_get_binary_imm2_yftWtd 566
#define op_count_i_bs_get_float2_xftstd 567
#define op_count_i_bs_get_float2_yftstd 568
#define op_count_i_bs_get_integer_xfttsd 569
#define op_count_i_bs_get_integer_yfttsd 570
#define op_count_i_bs_get_integer_16_xfd 571
#define op_count_i_bs_get_integer_16_yfd 572
#define op_count_i_bs_get_integer_32_xfd 573
#define op_count_i_bs_get_integer_32_yfd 574
#define op_count_i_bs_get_integer_8_xfd 575
#define op_count_i_bs_get_integer_8_yfd 576
#define op_count_i_bs_get_integer_imm_xWtftx 577
#define op_count_i_bs_get_integer_imm_yWtftx 578
#define op_count_i_bs_get_integer_small_imm_xWftx 579
#define op_count_i_bs_get_integer_small_imm_yWftx 580
#define op_count_i_bs_get_position_xx 581
#define op_count_i_bs_get_position_xy 582
#define op_count_i_bs_get_position_yx 583
#define op_count_i_bs_get_position_yy 584
#define op_count_i_bs_get_utf16_xftd 585
#define op_count_i_bs_get_utf16_yftd 586
#define op_count_i_bs_get_utf8_xfd 587
#define op_count_i_bs_get_utf8_yfd 588
#define op_count_i_bs_init_Wtx 589
#define op_count_i_bs_init_bits_Wtx 590
#define op_count_i_bs_init_bits_fail_xjtx 591
#define op_count_i_bs_init_bits_fail_yjtx 592
#define op_count_i_bs_init_bits_fail_heap_sIjtx 593
#define op_count_i_bs_init_bits_heap_WItx 594
#define op_count_i_bs_init_fail_xjtx 595
#define op_count_i_bs_init_fail_yjtx 596
#define op_count_i_bs_init_fail_heap_sIjtx 597
#define op_count_i_bs_init_heap_WItx 598
#define op_count_i_bs_match_string_xfWW 599
#define op_count_i_bs_match_string_yfWW 600
#define op_count_i_bs_private_append_jtsSx 601
#define op_count_i_bs_put_utf8_jS 602
#define op_count_i_bs_restore2_xt 603
#define op_count_i_bs_save2_xt 604
#define op_count_i_bs_skip_bits2_xxft 605
#define op_count_i_bs_skip_bits2_xyft 606
#define op_count_i_bs_skip_bits2_yxft 607
#define op_count_i_bs_skip_bits2_yyft 608
#define op_count_i_bs_skip_bits_imm2_fxW 609
#define op_count_i_bs_skip_bits_imm2_fyW 610
#define op_count_i_bs_start_match2_xfttd 611
#define op_count_i_bs_start_match2_yfttd 612
#define op_count_i_bs_start_match3_xtfd 613
#define op_count_i_bs_start_match3_ytfd 614
#define op_count_i_bs_start_match3_gp_xtfdx 615
#define op_count_i_bs_start_match3_gp_ytfdx 616
#define op_count_i_bs_utf16_size_Sx 617
#define op_count_i_bs_utf8_size_Sx 618
#define op_count_i_bs_validate_unicode_jS 619
#define op_count_i_bs_validate_unicode_retract_jsS 620
#define op_count_i_bsl_ssjd 621
#define op_count_i_bsr_ssjd 622
#define op_count_i_bxor_jssd 623
#define op_count_i_call_f 624
#define op_count_i_call_ext_e 625
#define op_count_i_call_ext_last_eQ 626
#define op_count_i_call_ext_only_e 627
#define op_count_i_call_fun_t 628
#define op_count_i_call_fun_last_tQ 629
#define op_count_i_call_last_fQ 630
#define op_count_i_call_only_f 631
#define op_count_i_debug_breakpoint 632
#define op_count_i_element_xjsd 633
#define op_count_i_element_yjsd 634
#define op_count_i_fadd_lll 635
#define op_count_i_fast_element_xjId 636
#define op_count_i_fast_element_yjId 637
#define op_count_i_fdiv_lll 638
#define op_count_i_fmul_lll 639
#define op_count_i_fnegate_ll 640
#define op_count_i_fsub_lll 641
#define op_count_i_func_info_IaaI 642
#define op_count_i_generic_breakpoint 643
#define op_count_i_get_sd 644
#define op_count_i_get_hash_cId 645
#define op_count_i_get_map_element_fxxx 646
#define op_count_i_get_map_element_fxxy 647
#define op_count_i_get_map_element_fxyx 648
#define op_count_i_get_map_element_fxyy 649
#define op_count_i_get_map_element_fyxx 650
#define op_count_i_get_map_element_fyxy 651
#define op_count_i_get_map_element_fyyx 652
#define op_count_i_get_map_element_fyyy 653
#define op_count_i_get_map_element_hash_fxcIx 654
#define op_count_i_get_map_element_hash_fxcIy 655
#define op_count_i_get_map_element_hash_fycIx 656
#define op_count_i_get_map_element_hash_fycIy 657
#define op_count_i_get_map_elements_fsI 658
#define op_count_i_get_tuple_element_xPx 659
#define op_count_i_get_tuple_element_xPy 660
#define op_count_i_get_tuple_element_yPx 661
#define op_count_i_get_tuple_element_yPy 662
#define op_count_i_get_tuple_element2_xPx 663
#define op_count_i_get_tuple_element2_dst_xPxx 664
#define op_count_i_get_tuple_element2_dst_xPyy 665
#define op_count_i_get_tuple_element3_xPx 666
#define op_count_i_hibernate 667
#define op_count_i_increment_rWd 668
#define op_count_i_increment_xWd 669
#define op_count_i_increment_yWd 670
#define op_count_i_int_bnot_jSd 671
#define op_count_i_int_div_jssd 672
#define op_count_i_is_eq_exact_immed_frc 673
#define op_count_i_is_eq_exact_immed_fxc 674
#define op_count_i_is_eq_exact_immed_fyc 675
#define op_count_i_is_eq_exact_literal_fxc 676
#define op_count_i_is_eq_exact_literal_fyc 677
#define op_count_i_is_ne_exact_immed_fxc 678
#define op_count_i_is_ne_exact_immed_fyc 679
#define op_count_i_is_ne_exact_literal_fxc 680
#define op_count_i_is_ne_exact_literal_fyc 681
#define op_count_i_jump_on_val_xfIW 682
#define op_count_i_jump_on_val_yfIW 683
#define op_count_i_jump_on_val_zero_xfI 684
#define op_count_i_jump_on_val_zero_yfI 685
#define op_count_i_length_jtd 686
#define op_count_i_length_setup_tx 687
#define op_count_i_length_setup_ty 688
#define op_count_i_loop_rec_f 689
#define op_count_i_m_div_jssd 690
#define op_count_i_make_fun_Wt 691
#define op_count_i_minus_xxjd 692
#define op_count_i_minus_xyjd 693
#define op_count_i_minus_yxjd 694
#define op_count_i_minus_yyjd 695
#define op_count_i_minus_cxjd 696
#define op_count_i_minus_cyjd 697
#define op_count_i_move_call_ext_ce 698
#define op_count_i_move_call_ext_last_eQc 699
#define op_count_i_move_call_ext_only_ec 700
#define op_count_i_new_bs_put_binary_jStS 701
#define op_count_i_new_bs_put_binary_all_xjt 702
#define op_count_i_new_bs_put_binary_all_yjt 703
#define op_count_i_new_bs_put_binary_imm_jWS 704
#define op_count_i_new_bs_put_float_jSts 705
#define op_count_i_new_bs_put_float_imm_jWts 706
#define op_count_i_new_bs_put_integer_jSts 707
#define op_count_i_new_bs_put_integer_imm_xjWt 708
#define op_count_i_new_bs_put_integer_imm_yjWt 709
#define op_count_i_new_bs_put_integer_imm_cjWt 710
#define op_count_i_new_small_map_lit_dtq 711
#define op_count_i_perf_counter 712
#define op_count_i_plus_xxjd 713
#define op_count_i_plus_xyjd 714
#define op_count_i_plus_yxjd 715
#define op_count_i_plus_yyjd 716
#define op_count_i_plus_xcjd 717
#define op_count_i_plus_ycjd 718
#define op_count_i_raise 719
#define op_count_i_recv_mark 720
#define op_count_i_recv_set 721
#define op_count_i_rem_xxjd 722
#define op_count_i_rem_ssjd 723
#define op_count_i_return_time_trace 724
#define op_count_i_return_to_trace 725
#define op_count_i_select_tuple_arity_xfI 726
#define op_count_i_select_tuple_arity_yfI 727
#define op_count_i_select_tuple_arity2_xfAA 728
#define op_count_i_select_tuple_arity2_yfAA 729
#define op_count_i_select_val2_xfcc 730
#define op_count_i_select_val2_yfcc 731
#define op_count_i_select_val_bins_xfI 732
#define op_count_i_select_val_bins_yfI 733
#define op_count_i_select_val_lins_xfI 734
#define op_count_i_select_val_lins_yfI 735
#define op_count_i_times_jssd 736
#define op_count_i_trim_t 737
#define op_count_i_wait_error 738
#define op_count_i_wait_error_locked 739
#define op_count_i_yield 740
#define op_count_if_end 741
#define op_count_init_y 742
#define op_count_init2_yy 743
#define op_count_init3_yyy 744
#define op_count_init_seq3_y 745
#define op_count_init_seq4_y 746
#define op_count_init_seq5_y 747
#define op_count_int_code_end 748
#define op_count_is_atom_fx 749
#define op_count_is_atom_fy 750
#define op_count_is_binary_fx 751
#define op_count_is_binary_fy 752
#define op_count_is_bitstring_fx 753
#define op_count_is_bitstring_fy 754
#define op_count_is_boolean_fx 755
#define op_count_is_boolean_fy 756
#define op_count_is_eq_fSs 757
#define op_count_is_eq_exact_fxx 758
#define op_count_is_eq_exact_fxy 759
#define op_count_is_eq_exact_fyy 760
#define op_count_is_float_fx 761
#define op_count_is_float_fy 762
#define op_count_is_function_fx 763
#define op_count_is_function_fy 764
#define op_count_is_ge_fxx 765
#define op_count_is_ge_fxc 766
#define op_count_is_ge_fcx 767
#define op_count_is_ge_fss 768
#define op_count_is_integer_fx 769
#define op_count_is_integer_fy 770
#define op_count_is_integer_allocate_fxtt 771
#define op_count_is_list_fx 772
#define op_count_is_list_fy 773
#define op_count_is_lt_fxx 774
#define op_count_is_lt_fxc 775
#define op_count_is_lt_fcx 776
#define op_count_is_lt_fss 777
#define op_count_is_map_fx 778
#define op_count_is_map_fy 779
#define op_count_is_ne_fSs 780
#define op_count_is_ne_exact_fSS 781
#define op_count_is_nil_fx 782
#define op_count_is_nil_fy 783
#define op_count_is_nonempty_list_fx 784
#define op_count_is_nonempty_list_fy 785
#define op_count_is_nonempty_list_allocate_frtt 786
#define op_count_is_nonempty_list_allocate_fxtt 787
#define op_count_is_nonempty_list_get_hd_fxx 788
#define op_count_is_nonempty_list_get_list_frxx 789
#define op_count_is_nonempty_list_get_list_fxxx 790
#define op_count_is_nonempty_list_get_tl_fxx 791
#define op_count_is_number_fx 792
#define op_count_is_number_fy 793
#define op_count_is_pid_fx 794
#define op_count_is_pid_fy 795
#define op_count_is_port_fx 796
#define op_count_is_port_fy 797
#define op_count_is_reference_fx 798
#define op_count_is_reference_fy 799
#define op_count_is_tagged_tuple_frAa 800
#define op_count_is_tagged_tuple_fxAa 801
#define op_count_is_tagged_tuple_fyAa 802
#define op_count_is_tagged_tuple_ff_ffrAa 803
#define op_count_is_tagged_tuple_ff_ffxAa 804
#define op_count_is_tuple_fr 805
#define op_count_is_tuple_fx 806
#define op_count_is_tuple_fy 807
#define op_count_is_tuple_of_arity_frA 808
#define op_count_is_tuple_of_arity_fxA 809
#define op_count_is_tuple_of_arity_fyA 810
#define op_count_jump_f 811
#define op_count_label_L 812
#define op_count_line_I 813
#define op_count_loop_rec_end_f 814
#define op_count_move_nx 815
#define op_count_move_rx 816
#define op_count_move_ry 817
#define op_count_move_xr 818
#define op_count_move_xx 819
#define op_count_move_xy 820
#define op_count_move_yr 821
#define op_count_move_yx 822
#define op_count_move_yy 823
#define op_count_move_cr 824
#define op_count_move_cx 825
#define op_count_move_cy 826
#define op_count_move2_par_xxxx 827
#define op_count_move2_par_xxxy 828
#define op_count_move2_par_yxxx 829
#define op_count_move2_par_yxxy 830
#define op_count_move2_par_yxyx 831
#define op_count_move3_xxxxxx 832
#define op_count_move3_yxyxyx 833
#define op_count_move_call_xf 834
#define op_count_move_call_yf 835
#define op_count_move_call_cf 836
#define op_count_move_call_last_xfQ 837
#define op_count_move_call_last_yfQ 838
#define op_count_move_call_last_cfQ 839
#define op_count_move_call_only_xf 840
#define op_count_move_call_only_cf 841
#define op_count_move_deallocate_return_nQ 842
#define op_count_move_deallocate_return_xQ 843
#define op_count_move_deallocate_return_yQ 844
#define op_count_move_deallocate_return_cQ 845
#define op_count_move_jump_fxx 846
#define op_count_move_jump_fxy 847
#define op_count_move_jump_fyx 848
#define op_count_move_jump_fyy 849
#define op_count_move_jump_fcr 850
#define op_count_move_jump_fcx 851
#define op_count_move_jump_fcy 852
#define op_count_move_return_n 853
#define op_count_move_return_x 854
#define op_count_move_return_c 855
#define op_count_move_shift_nyx 856
#define op_count_move_shift_xxx 857
#define op_count_move_shift_xxy 858
#define op_count_move_shift_xyx 859
#define op_count_move_shift_yry 860
#define op_count_move_shift_yxx 861
#define op_count_move_shift_cxx 862
#define op_count_move_src_window2_yxx 863
#define op_count_move_src_window3_yxxx 864
#define op_count_move_src_window4_yxxxx 865
#define op_count_move_trim_yxt 866
#define op_count_move_window2_xxy 867
#define op_count_move_window3_xxxy 868
#define op_count_move_window4_xxxxy 869
#define op_count_move_window5_xxxxxy 870
#define op_count_move_x1_c 871
#define op_count_move_x2_c 872
#define op_count_new_map_dtI 873
#define op_count_node_x 874
#define op_count_node_y 875
#define op_count_normal_exit 876
#define op_count_on_load 877
#define op_count_put_list_rnr 878
#define op_count_put_list_rnx 879
#define op_count_put_list_rxr 880
#define op_count_put_list_rxx 881
#define op_count_put_list_xnx 882
#define op_count_put_list_xny 883
#define op_count_put_list_xxr 884
#define op_count_put_list_xxx 885
#define op_count_put_list_xyx 886
#define op_count_put_list_ynx 887
#define op_count_put_list_yny 888
#define op_count_put_list_yxx 889
#define op_count_put_list_yyx 890
#define op_count_put_list_xcx 891
#define op_count_put_list_ycx 892
#define op_count_put_list_cxx 893
#define op_count_put_list_cyx 894
#define op_count_put_list_ssd 895
#define op_count_put_tuple2_xI 896
#define op_count_put_tuple2_yI 897
#define op_count_raw_raise 898
#define op_count_remove_message 899
#define op_count_return 900
#define op_count_return_trace 901
#define op_count_self_x 902
#define op_count_self_y 903
#define op_count_send 904
#define op_count_set_tuple_element_sSP 905
#define op_count_swap_xx 906
#define op_count_swap_yx 907
#define op_count_swap_yy 908
#define op_count_swap_temp_xxx 909
#define op_count_system_limit_j 910
#define op_count_test_arity_fxA 911
#define op_count_test_arity_fyA 912
#define op_count_test_arity_get_tuple_element_fxAPx 913
#define op_count_test_heap_It 914
#define op_count_test_heap_1_put_list_Iy 915
#define op_count_timeout 916
#define op_count_timeout_locked 917
#define op_count_trace_jump_W 918
#define op_count_try_case_y 919
#define op_count_try_case_end_s 920
#define op_count_try_end_y 921
#define op_count_update_list_xx 922
#define op_count_update_list_yx 923
#define op_count_update_list_cx 924
#define op_count_update_map_assoc_xdtI 925
#define op_count_update_map_assoc_ydtI 926
#define op_count_update_map_assoc_cdtI 927
#define op_count_update_map_exact_xjdtI 928
#define op_count_update_map_exact_yjdtI 929
#define op_count_wait_locked_f 930
#define op_count_wait_timeout_locked_sf 931
#define op_count_wait_timeout_locked_int_If 932
#define op_count_wait_timeout_unlocked_sf 933
#define op_count_wait_timeout_unlocked_int_If 934
#define op_count_wait_unlocked_f 935

#define DEFINE_OPCODES \
&&lb_allocate_tt, \
&&lb_allocate_heap_tIt, \
&&lb_allocate_heap_zero_tIt, \
&&lb_allocate_init_tty, \
&&lb_allocate_zero_tt, \
&&lb_apply_t, \
&&lb_apply_bif, \
&&lb_apply_last_tQ, \
&&lb_badarg_j, \
&&lb_badmatch_x, \
&&lb_bs_add_jsstx, \
&&lb_bs_context_to_binary_x, \
&&lb_bs_get_tail_xdt, \
&&lb_bs_get_tail_ydt, \
&&lb_bs_init_writable, \
&&lb_bs_put_string_WW, \
&&lb_bs_put_utf16_jtS, \
&&lb_bs_set_position_xx, \
&&lb_bs_set_position_xy, \
&&lb_bs_set_position_yx, \
&&lb_bs_set_position_yy, \
&&lb_bs_test_tail_imm2_fxW, \
&&lb_bs_test_tail_imm2_fyW, \
&&lb_bs_test_unit_fxt, \
&&lb_bs_test_unit_fyt, \
&&lb_bs_test_unit8_fx, \
&&lb_bs_test_unit8_fy, \
&&lb_bs_test_zero_tail2_fx, \
&&lb_bs_test_zero_tail2_fy, \
&&lb_build_stacktrace, \
&&lb_call_bif_e, \
&&lb_call_bif_only_e, \
&&lb_call_error_handler, \
&&lb_call_nif, \
&&lb_case_end_x, \
&&lb_catch_yf, \
&&lb_catch_end_y, \
&&lb_cold_is_function2_fxx, \
&&lb_continue_exit, \
&&lb_deallocate_Q, \
&&lb_deallocate_return_Q, \
&&lb_ensure_map_x, \
&&lb_error_action_code, \
&&lb_fconv_Sl, \
&&lb_fload_ql, \
&&lb_fload_Sl, \
&&lb_fstore_ld, \
&&lb_get_hd_xx, \
&&lb_get_hd_xy, \
&&lb_get_hd_yx, \
&&lb_get_hd_yy, \
&&lb_get_list_rry, \
&&lb_get_list_rxr, \
&&lb_get_list_rxx, \
&&lb_get_list_rxy, \
&&lb_get_list_ryr, \
&&lb_get_list_xrx, \
&&lb_get_list_xxx, \
&&lb_get_list_xxy, \
&&lb_get_list_xyx, \
&&lb_get_list_xyy, \
&&lb_get_list_yxx, \
&&lb_get_list_yxy, \
&&lb_get_list_yyx, \
&&lb_get_list_yyy, \
&&lb_get_tl_xx, \
&&lb_get_tl_xy, \
&&lb_get_tl_yx, \
&&lb_get_tl_yy, \
&&lb_hipe_call_count, \
&&lb_hipe_trap_call, \
&&lb_hipe_trap_call_closure, \
&&lb_hipe_trap_resume, \
&&lb_hipe_trap_return, \
&&lb_hipe_trap_throw, \
&&lb_hot_is_function2_fSt, \
&&lb_i_apply, \
&&lb_i_apply_fun, \
&&lb_i_apply_fun_last_Q, \
&&lb_i_apply_fun_only, \
&&lb_i_apply_last_Q, \
&&lb_i_apply_only, \
&&lb_i_band_xcjd, \
&&lb_i_band_ssjd, \
&&lb_i_bif1_sfbd, \
&&lb_i_bif1_body_sbd, \
&&lb_i_bif2_ssfbd, \
&&lb_i_bif2_body_ssbd, \
&&lb_i_bif3_sssfbd, \
&&lb_i_bif3_body_sssbd, \
&&lb_i_bor_jssd, \
&&lb_i_bs_append_jIttsx, \
&&lb_i_bs_append_jIttsy, \
&&lb_i_bs_get_binary2_xftstd, \
&&lb_i_bs_get_binary2_yftstd, \
&&lb_i_bs_get_binary_all2_xfttd, \
&&lb_i_bs_get_binary_all2_yfttd, \
&&lb_i_bs_get_binary_imm2_xftWtd, \
&&lb_i_bs_get_binary_imm2_yftWtd, \
&&lb_i_bs_get_float2_xftstd, \
&&lb_i_bs_get_float2_yftstd, \
&&lb_i_bs_get_integer_xfttsd, \
&&lb_i_bs_get_integer_yfttsd, \
&&lb_i_bs_get_integer_16_xfd, \
&&lb_i_bs_get_integer_16_yfd, \
&&lb_i_bs_get_integer_32_xfd, \
&&lb_i_bs_get_integer_32_yfd, \
&&lb_i_bs_get_integer_8_xfd, \
&&lb_i_bs_get_integer_8_yfd, \
&&lb_i_bs_get_integer_imm_xWtftx, \
&&lb_i_bs_get_integer_imm_yWtftx, \
&&lb_i_bs_get_integer_small_imm_xWftx, \
&&lb_i_bs_get_integer_small_imm_yWftx, \
&&lb_i_bs_get_position_xx, \
&&lb_i_bs_get_position_xy, \
&&lb_i_bs_get_position_yx, \
&&lb_i_bs_get_position_yy, \
&&lb_i_bs_get_utf16_xftd, \
&&lb_i_bs_get_utf16_yftd, \
&&lb_i_bs_get_utf8_xfd, \
&&lb_i_bs_get_utf8_yfd, \
&&lb_i_bs_init_Wtx, \
&&lb_i_bs_init_bits_Wtx, \
&&lb_i_bs_init_bits_fail_xjtx, \
&&lb_i_bs_init_bits_fail_yjtx, \
&&lb_i_bs_init_bits_fail_heap_sIjtx, \
&&lb_i_bs_init_bits_heap_WItx, \
&&lb_i_bs_init_fail_xjtx, \
&&lb_i_bs_init_fail_yjtx, \
&&lb_i_bs_init_fail_heap_sIjtx, \
&&lb_i_bs_init_heap_WItx, \
&&lb_i_bs_match_string_xfWW, \
&&lb_i_bs_match_string_yfWW, \
&&lb_i_bs_private_append_jtsSx, \
&&lb_i_bs_put_utf8_jS, \
&&lb_i_bs_restore2_xt, \
&&lb_i_bs_save2_xt, \
&&lb_i_bs_skip_bits2_xxft, \
&&lb_i_bs_skip_bits2_xyft, \
&&lb_i_bs_skip_bits2_yxft, \
&&lb_i_bs_skip_bits2_yyft, \
&&lb_i_bs_skip_bits_imm2_fxW, \
&&lb_i_bs_skip_bits_imm2_fyW, \
&&lb_i_bs_start_match2_xfttd, \
&&lb_i_bs_start_match2_yfttd, \
&&lb_i_bs_start_match3_xtfd, \
&&lb_i_bs_start_match3_ytfd, \
&&lb_i_bs_start_match3_gp_xtfdx, \
&&lb_i_bs_start_match3_gp_ytfdx, \
&&lb_i_bs_utf16_size_Sx, \
&&lb_i_bs_utf8_size_Sx, \
&&lb_i_bs_validate_unicode_jS, \
&&lb_i_bs_validate_unicode_retract_jsS, \
&&lb_i_bsl_ssjd, \
&&lb_i_bsr_ssjd, \
&&lb_i_bxor_jssd, \
&&lb_i_call_f, \
&&lb_i_call_ext_e, \
&&lb_i_call_ext_last_eQ, \
&&lb_i_call_ext_only_e, \
&&lb_i_call_fun_t, \
&&lb_i_call_fun_last_tQ, \
&&lb_i_call_last_fQ, \
&&lb_i_call_only_f, \
&&lb_i_debug_breakpoint, \
&&lb_i_element_xjsd, \
&&lb_i_element_yjsd, \
&&lb_i_fadd_lll, \
&&lb_i_fast_element_xjId, \
&&lb_i_fast_element_yjId, \
&&lb_i_fdiv_lll, \
&&lb_i_fmul_lll, \
&&lb_i_fnegate_ll, \
&&lb_i_fsub_lll, \
&&lb_i_func_info_IaaI, \
&&lb_i_generic_breakpoint, \
&&lb_i_get_sd, \
&&lb_i_get_hash_cId, \
&&lb_i_get_map_element_fxxx, \
&&lb_i_get_map_element_fxxy, \
&&lb_i_get_map_element_fxyx, \
&&lb_i_get_map_element_fxyy, \
&&lb_i_get_map_element_fyxx, \
&&lb_i_get_map_element_fyxy, \
&&lb_i_get_map_element_fyyx, \
&&lb_i_get_map_element_fyyy, \
&&lb_i_get_map_element_hash_fxcIx, \
&&lb_i_get_map_element_hash_fxcIy, \
&&lb_i_get_map_element_hash_fycIx, \
&&lb_i_get_map_element_hash_fycIy, \
&&lb_i_get_map_elements_fsI, \
&&lb_i_get_tuple_element_xPx, \
&&lb_i_get_tuple_element_xPy, \
&&lb_i_get_tuple_element_yPx, \
&&lb_i_get_tuple_element_yPy, \
&&lb_i_get_tuple_element2_xPx, \
&&lb_i_get_tuple_element2_dst_xPxx, \
&&lb_i_get_tuple_element2_dst_xPyy, \
&&lb_i_get_tuple_element3_xPx, \
&&lb_i_hibernate, \
&&lb_i_increment_rWd, \
&&lb_i_increment_xWd, \
&&lb_i_increment_yWd, \
&&lb_i_int_bnot_jSd, \
&&lb_i_int_div_jssd, \
&&lb_i_is_eq_exact_immed_frc, \
&&lb_i_is_eq_exact_immed_fxc, \
&&lb_i_is_eq_exact_immed_fyc, \
&&lb_i_is_eq_exact_literal_fxc, \
&&lb_i_is_eq_exact_literal_fyc, \
&&lb_i_is_ne_exact_immed_fxc, \
&&lb_i_is_ne_exact_immed_fyc, \
&&lb_i_is_ne_exact_literal_fxc, \
&&lb_i_is_ne_exact_literal_fyc, \
&&lb_i_jump_on_val_xfIW, \
&&lb_i_jump_on_val_yfIW, \
&&lb_i_jump_on_val_zero_xfI, \
&&lb_i_jump_on_val_zero_yfI, \
&&lb_i_length_jtd, \
&&lb_i_length_setup_tx, \
&&lb_i_length_setup_ty, \
&&lb_i_loop_rec_f, \
&&lb_i_m_div_jssd, \
&&lb_i_make_fun_Wt, \
&&lb_i_minus_xxjd, \
&&lb_i_minus_xyjd, \
&&lb_i_minus_yxjd, \
&&lb_i_minus_yyjd, \
&&lb_i_minus_cxjd, \
&&lb_i_minus_cyjd, \
&&lb_i_move_call_ext_ce, \
&&lb_i_move_call_ext_last_eQc, \
&&lb_i_move_call_ext_only_ec, \
&&lb_i_new_bs_put_binary_jStS, \
&&lb_i_new_bs_put_binary_all_xjt, \
&&lb_i_new_bs_put_binary_all_yjt, \
&&lb_i_new_bs_put_binary_imm_jWS, \
&&lb_i_new_bs_put_float_jSts, \
&&lb_i_new_bs_put_float_imm_jWts, \
&&lb_i_new_bs_put_integer_jSts, \
&&lb_i_new_bs_put_integer_imm_xjWt, \
&&lb_i_new_bs_put_integer_imm_yjWt, \
&&lb_i_new_bs_put_integer_imm_cjWt, \
&&lb_i_new_small_map_lit_dtq, \
&&lb_i_perf_counter, \
&&lb_i_plus_xxjd, \
&&lb_i_plus_xyjd, \
&&lb_i_plus_yxjd, \
&&lb_i_plus_yyjd, \
&&lb_i_plus_xcjd, \
&&lb_i_plus_ycjd, \
&&lb_i_raise, \
&&lb_i_recv_mark, \
&&lb_i_recv_set, \
&&lb_i_rem_xxjd, \
&&lb_i_rem_ssjd, \
&&lb_i_return_time_trace, \
&&lb_i_return_to_trace, \
&&lb_i_select_tuple_arity_xfI, \
&&lb_i_select_tuple_arity_yfI, \
&&lb_i_select_tuple_arity2_xfAA, \
&&lb_i_select_tuple_arity2_yfAA, \
&&lb_i_select_val2_xfcc, \
&&lb_i_select_val2_yfcc, \
&&lb_i_select_val_bins_xfI, \
&&lb_i_select_val_bins_yfI, \
&&lb_i_select_val_lins_xfI, \
&&lb_i_select_val_lins_yfI, \
&&lb_i_times_jssd, \
&&lb_i_trim_t, \
&&lb_i_wait_error, \
&&lb_i_wait_error_locked, \
&&lb_i_yield, \
&&lb_if_end, \
&&lb_init_y, \
&&lb_init2_yy, \
&&lb_init3_yyy, \
&&lb_init_seq3_y, \
&&lb_init_seq4_y, \
&&lb_init_seq5_y, \
&&lb_int_code_end, \
&&lb_is_atom_fx, \
&&lb_is_atom_fy, \
&&lb_is_binary_fx, \
&&lb_is_binary_fy, \
&&lb_is_bitstring_fx, \
&&lb_is_bitstring_fy, \
&&lb_is_boolean_fx, \
&&lb_is_boolean_fy, \
&&lb_is_eq_fSs, \
&&lb_is_eq_exact_fxx, \
&&lb_is_eq_exact_fxy, \
&&lb_is_eq_exact_fyy, \
&&lb_is_float_fx, \
&&lb_is_float_fy, \
&&lb_is_function_fx, \
&&lb_is_function_fy, \
&&lb_is_ge_fxx, \
&&lb_is_ge_fxc, \
&&lb_is_ge_fcx, \
&&lb_is_ge_fss, \
&&lb_is_integer_fx, \
&&lb_is_integer_fy, \
&&lb_is_integer_allocate_fxtt, \
&&lb_is_list_fx, \
&&lb_is_list_fy, \
&&lb_is_lt_fxx, \
&&lb_is_lt_fxc, \
&&lb_is_lt_fcx, \
&&lb_is_lt_fss, \
&&lb_is_map_fx, \
&&lb_is_map_fy, \
&&lb_is_ne_fSs, \
&&lb_is_ne_exact_fSS, \
&&lb_is_nil_fx, \
&&lb_is_nil_fy, \
&&lb_is_nonempty_list_fx, \
&&lb_is_nonempty_list_fy, \
&&lb_is_nonempty_list_allocate_frtt, \
&&lb_is_nonempty_list_allocate_fxtt, \
&&lb_is_nonempty_list_get_hd_fxx, \
&&lb_is_nonempty_list_get_list_frxx, \
&&lb_is_nonempty_list_get_list_fxxx, \
&&lb_is_nonempty_list_get_tl_fxx, \
&&lb_is_number_fx, \
&&lb_is_number_fy, \
&&lb_is_pid_fx, \
&&lb_is_pid_fy, \
&&lb_is_port_fx, \
&&lb_is_port_fy, \
&&lb_is_reference_fx, \
&&lb_is_reference_fy, \
&&lb_is_tagged_tuple_frAa, \
&&lb_is_tagged_tuple_fxAa, \
&&lb_is_tagged_tuple_fyAa, \
&&lb_is_tagged_tuple_ff_ffrAa, \
&&lb_is_tagged_tuple_ff_ffxAa, \
&&lb_is_tuple_fr, \
&&lb_is_tuple_fx, \
&&lb_is_tuple_fy, \
&&lb_is_tuple_of_arity_frA, \
&&lb_is_tuple_of_arity_fxA, \
&&lb_is_tuple_of_arity_fyA, \
&&lb_jump_f, \
&&lb_label_L, \
&&lb_line_I, \
&&lb_loop_rec_end_f, \
&&lb_move_nx, \
&&lb_move_rx, \
&&lb_move_ry, \
&&lb_move_xr, \
&&lb_move_xx, \
&&lb_move_xy, \
&&lb_move_yr, \
&&lb_move_yx, \
&&lb_move_yy, \
&&lb_move_cr, \
&&lb_move_cx, \
&&lb_move_cy, \
&&lb_move2_par_xxxx, \
&&lb_move2_par_xxxy, \
&&lb_move2_par_yxxx, \
&&lb_move2_par_yxxy, \
&&lb_move2_par_yxyx, \
&&lb_move3_xxxxxx, \
&&lb_move3_yxyxyx, \
&&lb_move_call_xf, \
&&lb_move_call_yf, \
&&lb_move_call_cf, \
&&lb_move_call_last_xfQ, \
&&lb_move_call_last_yfQ, \
&&lb_move_call_last_cfQ, \
&&lb_move_call_only_xf, \
&&lb_move_call_only_cf, \
&&lb_move_deallocate_return_nQ, \
&&lb_move_deallocate_return_xQ, \
&&lb_move_deallocate_return_yQ, \
&&lb_move_deallocate_return_cQ, \
&&lb_move_jump_fxx, \
&&lb_move_jump_fxy, \
&&lb_move_jump_fyx, \
&&lb_move_jump_fyy, \
&&lb_move_jump_fcr, \
&&lb_move_jump_fcx, \
&&lb_move_jump_fcy, \
&&lb_move_return_n, \
&&lb_move_return_x, \
&&lb_move_return_c, \
&&lb_move_shift_nyx, \
&&lb_move_shift_xxx, \
&&lb_move_shift_xxy, \
&&lb_move_shift_xyx, \
&&lb_move_shift_yry, \
&&lb_move_shift_yxx, \
&&lb_move_shift_cxx, \
&&lb_move_src_window2_yxx, \
&&lb_move_src_window3_yxxx, \
&&lb_move_src_window4_yxxxx, \
&&lb_move_trim_yxt, \
&&lb_move_window2_xxy, \
&&lb_move_window3_xxxy, \
&&lb_move_window4_xxxxy, \
&&lb_move_window5_xxxxxy, \
&&lb_move_x1_c, \
&&lb_move_x2_c, \
&&lb_new_map_dtI, \
&&lb_node_x, \
&&lb_node_y, \
&&lb_normal_exit, \
&&lb_on_load, \
&&lb_put_list_rnr, \
&&lb_put_list_rnx, \
&&lb_put_list_rxr, \
&&lb_put_list_rxx, \
&&lb_put_list_xnx, \
&&lb_put_list_xny, \
&&lb_put_list_xxr, \
&&lb_put_list_xxx, \
&&lb_put_list_xyx, \
&&lb_put_list_ynx, \
&&lb_put_list_yny, \
&&lb_put_list_yxx, \
&&lb_put_list_yyx, \
&&lb_put_list_xcx, \
&&lb_put_list_ycx, \
&&lb_put_list_cxx, \
&&lb_put_list_cyx, \
&&lb_put_list_ssd, \
&&lb_put_tuple2_xI, \
&&lb_put_tuple2_yI, \
&&lb_raw_raise, \
&&lb_remove_message, \
&&lb_return, \
&&lb_return_trace, \
&&lb_self_x, \
&&lb_self_y, \
&&lb_send, \
&&lb_set_tuple_element_sSP, \
&&lb_swap_xx, \
&&lb_swap_yx, \
&&lb_swap_yy, \
&&lb_swap_temp_xxx, \
&&lb_system_limit_j, \
&&lb_test_arity_fxA, \
&&lb_test_arity_fyA, \
&&lb_test_arity_get_tuple_element_fxAPx, \
&&lb_test_heap_It, \
&&lb_test_heap_1_put_list_Iy, \
&&lb_timeout, \
&&lb_timeout_locked, \
&&lb_trace_jump_W, \
&&lb_try_case_y, \
&&lb_try_case_end_s, \
&&lb_try_end_y, \
&&lb_update_list_xx, \
&&lb_update_list_yx, \
&&lb_update_list_cx, \
&&lb_update_map_assoc_xdtI, \
&&lb_update_map_assoc_ydtI, \
&&lb_update_map_assoc_cdtI, \
&&lb_update_map_exact_xjdtI, \
&&lb_update_map_exact_yjdtI, \
&&lb_wait_locked_f, \
&&lb_wait_timeout_locked_sf, \
&&lb_wait_timeout_locked_int_If, \
&&lb_wait_timeout_unlocked_sf, \
&&lb_wait_timeout_unlocked_int_If, \
&&lb_wait_unlocked_f,

#define DEFINE_COUNTING_OPCODES \
&&lb_count_allocate_tt, \
&&lb_count_allocate_heap_tIt, \
&&lb_count_allocate_heap_zero_tIt, \
&&lb_count_allocate_init_tty, \
&&lb_count_allocate_zero_tt, \
&&lb_count_apply_t, \
&&lb_count_apply_bif, \
&&lb_count_apply_last_tQ, \
&&lb_count_badarg_j, \
&&lb_count_badmatch_x, \
&&lb_count_bs_add_jsstx, \
&&lb_count_bs_context_to_binary_x, \
&&lb_count_bs_get_tail_xdt, \
&&lb_count_bs_get_tail_ydt, \
&&lb_count_bs_init_writable, \
&&lb_count_bs_put_string_WW, \
&&lb_count_bs_put_utf16_jtS, \
&&lb_count_bs_set_position_xx, \
&&lb_count_bs_set_position_xy, \
&&lb_count_bs_set_position_yx, \
&&lb_count_bs_set_position_yy, \
&&lb_count_bs_test_tail_imm2_fxW, \
&&lb_count_bs_test_tail_imm2_fyW, \
&&lb_count_bs_test_unit_fxt, \
&&lb_count_bs_test_unit_fyt, \
&&lb_count_bs_test_unit8_fx, \
&&lb_count_bs_test_unit8_fy, \
&&lb_count_bs_test_zero_tail2_fx, \
&&lb_count_bs_test_zero_tail2_fy, \
&&lb_count_build_stacktrace, \
&&lb_count_call_bif_e, \
&&lb_count_call_bif_only_e, \
&&lb_count_call_error_handler, \
&&lb_count_call_nif, \
&&lb_count_case_end_x, \
&&lb_count_catch_yf, \
&&lb_count_catch_end_y, \
&&lb_count_cold_is_function2_fxx, \
&&lb_count_continue_exit, \
&&lb_count_deallocate_Q, \
&&lb_count_deallocate_return_Q, \
&&lb_count_ensure_map_x, \
&&lb_count_error_action_code, \
&&lb_count_fconv_Sl, \
&&lb_count_fload_ql, \
&&lb_count_fload_Sl, \
&&lb_count_fstore_ld, \
&&lb_count_get_hd_xx, \
&&lb_count_get_hd_xy, \
&&lb_count_get_hd_yx, \
&&lb_count_get_hd_yy, \
&&lb_count_get_list_rry, \
&&lb_count_get_list_rxr, \
&&lb_count_get_list_rxx, \
&&lb_count_get_list_rxy, \
&&lb_count_get_list_ryr, \
&&lb_count_get_list_xrx, \
&&lb_count_get_list_xxx, \
&&lb_count_get_list_xxy, \
&&lb_count_get_list_xyx, \
&&lb_count_get_list_xyy, \
&&lb_count_get_list_yxx, \
&&lb_count_get_list_yxy, \
&&lb_count_get_list_yyx, \
&&lb_count_get_list_yyy, \
&&lb_count_get_tl_xx, \
&&lb_count_get_tl_xy, \
&&lb_count_get_tl_yx, \
&&lb_count_get_tl_yy, \
&&lb_count_hipe_call_count, \
&&lb_count_hipe_trap_call, \
&&lb_count_hipe_trap_call_closure, \
&&lb_count_hipe_trap_resume, \
&&lb_count_hipe_trap_return, \
&&lb_count_hipe_trap_throw, \
&&lb_count_hot_is_function2_fSt, \
&&lb_count_i_apply, \
&&lb_count_i_apply_fun, \
&&lb_count_i_apply_fun_last_Q, \
&&lb_count_i_apply_fun_only, \
&&lb_count_i_apply_last_Q, \
&&lb_count_i_apply_only, \
&&lb_count_i_band_xcjd, \
&&lb_count_i_band_ssjd, \
&&lb_count_i_bif1_sfbd, \
&&lb_count_i_bif1_body_sbd, \
&&lb_count_i_bif2_ssfbd, \
&&lb_count_i_bif2_body_ssbd, \
&&lb_count_i_bif3_sssfbd, \
&&lb_count_i_bif3_body_sssbd, \
&&lb_count_i_bor_jssd, \
&&lb_count_i_bs_append_jIttsx, \
&&lb_count_i_bs_append_jIttsy, \
&&lb_count_i_bs_get_binary2_xftstd, \
&&lb_count_i_bs_get_binary2_yftstd, \
&&lb_count_i_bs_get_binary_all2_xfttd, \
&&lb_count_i_bs_get_binary_all2_yfttd, \
&&lb_count_i_bs_get_binary_imm2_xftWtd, \
&&lb_count_i_bs_get_binary_imm2_yftWtd, \
&&lb_count_i_bs_get_float2_xftstd, \
&&lb_count_i_bs_get_float2_yftstd, \
&&lb_count_i_bs_get_integer_xfttsd, \
&&lb_count_i_bs_get_integer_yfttsd, \
&&lb_count_i_bs_get_integer_16_xfd, \
&&lb_count_i_bs_get_integer_16_yfd, \
&&lb_count_i_bs_get_integer_32_xfd, \
&&lb_count_i_bs_get_integer_32_yfd, \
&&lb_count_i_bs_get_integer_8_xfd, \
&&lb_count_i_bs_get_integer_8_yfd, \
&&lb_count_i_bs_get_integer_imm_xWtftx, \
&&lb_count_i_bs_get_integer_imm_yWtftx, \
&&lb_count_i_bs_get_integer_small_imm_xWftx, \
&&lb_count_i_bs_get_integer_small_imm_yWftx, \
&&lb_count_i_bs_get_position_xx, \
&&lb_count_i_bs_get_position_xy, \
&&lb_count_i_bs_get_position_yx, \
&&lb_count_i_bs_get_position_yy, \
&&lb_count_i_bs_get_utf16_xftd, \
&&lb_count_i_bs_get_utf16_yftd, \
&&lb_count_i_bs_get_utf8_xfd, \
&&lb_count_i_bs_get_utf8_yfd, \
&&lb_count_i_bs_init_Wtx, \
&&lb_count_i_bs_init_bits_Wtx, \
&&lb_count_i_bs_init_bits_fail_xjtx, \
&&lb_count_i_bs_init_bits_fail_yjtx, \
&&lb_count_i_bs_init_bits_fail_heap_sIjtx, \
&&lb_count_i_bs_init_bits_heap_WItx, \
&&lb_count_i_bs_init_fail_xjtx, \
&&lb_count_i_bs_init_fail_yjtx, \
&&lb_count_i_bs_init_fail_heap_sIjtx, \
&&lb_count_i_bs_init_heap_WItx, \
&&lb_count_i_bs_match_string_xfWW, \
&&lb_count_i_bs_match_string_yfWW, \
&&lb_count_i_bs_private_append_jtsSx, \
&&lb_count_i_bs_put_utf8_jS, \
&&lb_count_i_bs_restore2_xt, \
&&lb_count_i_bs_save2_xt, \
&&lb_count_i_bs_skip_bits2_xxft, \
&&lb_count_i_bs_skip_bits2_xyft, \
&&lb_count_i_bs_skip_bits2_yxft, \
&&lb_count_i_bs_skip_bits2_yyft, \
&&lb_count_i_bs_skip_bits_imm2_fxW, \
&&lb_count_i_bs_skip_bits_imm2_fyW, \
&&lb_count_i_bs_start_match2_xfttd, \
&&lb_count_i_bs_start_match2_yfttd, \
&&lb_count_i_bs_start_match3_xtfd, \
&&lb_count_i_bs_start_match3_ytfd, \
&&lb_count_i_bs_start_match3_gp_xtfdx, \
&&lb_count_i_bs_start_match3_gp_ytfdx, \
&&lb_count_i_bs_utf16_size_Sx, \
&&lb_count_i_bs_utf8_size_Sx, \
&&lb_count_i_bs_validate_unicode_jS, \
&&lb_count_i_bs_validate_unicode_retract_jsS, \
&&lb_count_i_bsl_ssjd, \
&&lb_count_i_bsr_ssjd, \
&&lb_count_i_bxor_jssd, \
&&lb_count_i_call_f, \
&&lb_count_i_call_ext_e, \
&&lb_count_i_call_ext_last_eQ, \
&&lb_count_i_call_ext_only_e, \
&&lb_count_i_call_fun_t, \
&&lb_count_i_call_fun_last_tQ, \
&&lb_count_i_call_last_fQ, \
&&lb_count_i_call_only_f, \
&&lb_count_i_debug_breakpoint, \
&&lb_count_i_element_xjsd, \
&&lb_count_i_element_yjsd, \
&&lb_count_i_fadd_lll, \
&&lb_count_i_fast_element_xjId, \
&&lb_count_i_fast_element_yjId, \
&&lb_count_i_fdiv_lll, \
&&lb_count_i_fmul_lll, \
&&lb_count_i_fnegate_ll, \
&&lb_count_i_fsub_lll, \
&&lb_count_i_func_info_IaaI, \
&&lb_count_i_generic_breakpoint, \
&&lb_count_i_get_sd, \
&&lb_count_i_get_hash_cId, \
&&lb_count_i_get_map_element_fxxx, \
&&lb_count_i_get_map_element_fxxy, \
&&lb_count_i_get_map_element_fxyx, \
&&lb_count_i_get_map_element_fxyy, \
&&lb_count_i_get_map_element_fyxx, \
&&lb_count_i_get_map_element_fyxy, \
&&lb_count_i_get_map_element_fyyx, \
&&lb_count_i_get_map_element_fyyy, \
&&lb_count_i_get_map_element_hash_fxcIx, \
&&lb_count_i_get_map_element_hash_fxcIy, \
&&lb_count_i_get_map_element_hash_fycIx, \
&&lb_count_i_get_map_element_hash_fycIy, \
&&lb_count_i_get_map_elements_fsI, \
&&lb_count_i_get_tuple_element_xPx, \
&&lb_count_i_get_tuple_element_xPy, \
&&lb_count_i_get_tuple_element_yPx, \
&&lb_count_i_get_tuple_element_yPy, \
&&lb_count_i_get_tuple_element2_xPx, \
&&lb_count_i_get_tuple_element2_dst_xPxx, \
&&lb_count_i_get_tuple_element2_dst_xPyy, \
&&lb_count_i_get_tuple_element3_xPx, \
&&lb_count_i_hibernate, \
&&lb_count_i_increment_rWd, \
&&lb_count_i_increment_xWd, \
&&lb_count_i_increment_yWd, \
&&lb_count_i_int_bnot_jSd, \
&&lb_count_i_int_div_jssd, \
&&lb_count_i_is_eq_exact_immed_frc, \
&&lb_count_i_is_eq_exact_immed_fxc, \
&&lb_count_i_is_eq_exact_immed_fyc, \
&&lb_count_i_is_eq_exact_literal_fxc, \
&&lb_count_i_is_eq_exact_literal_fyc, \
&&lb_count_i_is_ne_exact_immed_fxc, \
&&lb_count_i_is_ne_exact_immed_fyc, \
&&lb_count_i_is_ne_exact_literal_fxc, \
&&lb_count_i_is_ne_exact_literal_fyc, \
&&lb_count_i_jump_on_val_xfIW, \
&&lb_count_i_jump_on_val_yfIW, \
&&lb_count_i_jump_on_val_zero_xfI, \
&&lb_count_i_jump_on_val_zero_yfI, \
&&lb_count_i_length_jtd, \
&&lb_count_i_length_setup_tx, \
&&lb_count_i_length_setup_ty, \
&&lb_count_i_loop_rec_f, \
&&lb_count_i_m_div_jssd, \
&&lb_count_i_make_fun_Wt, \
&&lb_count_i_minus_xxjd, \
&&lb_count_i_minus_xyjd, \
&&lb_count_i_minus_yxjd, \
&&lb_count_i_minus_yyjd, \
&&lb_count_i_minus_cxjd, \
&&lb_count_i_minus_cyjd, \
&&lb_count_i_move_call_ext_ce, \
&&lb_count_i_move_call_ext_last_eQc, \
&&lb_count_i_move_call_ext_only_ec, \
&&lb_count_i_new_bs_put_binary_jStS, \
&&lb_count_i_new_bs_put_binary_all_xjt, \
&&lb_count_i_new_bs_put_binary_all_yjt, \
&&lb_count_i_new_bs_put_binary_imm_jWS, \
&&lb_count_i_new_bs_put_float_jSts, \
&&lb_count_i_new_bs_put_float_imm_jWts, \
&&lb_count_i_new_bs_put_integer_jSts, \
&&lb_count_i_new_bs_put_integer_imm_xjWt, \
&&lb_count_i_new_bs_put_integer_imm_yjWt, \
&&lb_count_i_new_bs_put_integer_imm_cjWt, \
&&lb_count_i_new_small_map_lit_dtq, \
&&lb_count_i_perf_counter, \
&&lb_count_i_plus_xxjd, \
&&lb_count_i_plus_xyjd, \
&&lb_count_i_plus_yxjd, \
&&lb_count_i_plus_yyjd, \
&&lb_count_i_plus_xcjd, \
&&lb_count_i_plus_ycjd, \
&&lb_count_i_raise, \
&&lb_count_i_recv_mark, \
&&lb_count_i_recv_set, \
&&lb_count_i_rem_xxjd, \
&&lb_count_i_rem_ssjd, \
&&lb_count_i_return_time_trace, \
&&lb_count_i_return_to_trace, \
&&lb_count_i_select_tuple_arity_xfI, \
&&lb_count_i_select_tuple_arity_yfI, \
&&lb_count_i_select_tuple_arity2_xfAA, \
&&lb_count_i_select_tuple_arity2_yfAA, \
&&lb_count_i_select_val2_xfcc, \
&&lb_count_i_select_val2_yfcc, \
&&lb_count_i_select_val_bins_xfI, \
&&lb_count_i_select_val_bins_yfI, \
&&lb_count_i_select_val_lins_xfI, \
&&lb_count_i_select_val_lins_yfI, \
&&lb_count_i_times_jssd, \
&&lb_count_i_trim_t, \
&&lb_count_i_wait_error, \
&&lb_count_i_wait_error_locked, \
&&lb_count_i_yield, \
&&lb_count_if_end, \
&&lb_count_init_y, \
&&lb_count_init2_yy, \
&&lb_count_init3_yyy, \
&&lb_count_init_seq3_y, \
&&lb_count_init_seq4_y, \
&&lb_count_init_seq5_y, \
&&lb_count_int_code_end, \
&&lb_count_is_atom_fx, \
&&lb_count_is_atom_fy, \
&&lb_count_is_binary_fx, \
&&lb_count_is_binary_fy, \
&&lb_count_is_bitstring_fx, \
&&lb_count_is_bitstring_fy, \
&&lb_count_is_boolean_fx, \
&&lb_count_is_boolean_fy, \
&&lb_count_is_eq_fSs, \
&&lb_count_is_eq_exact_fxx, \
&&lb_count_is_eq_exact_fxy, \
&&lb_count_is_eq_exact_fyy, \
&&lb_count_is_float_fx, \
&&lb_count_is_float_fy, \
&&lb_count_is_function_fx, \
&&lb_count_is_function_fy, \
&&lb_count_is_ge_fxx, \
&&lb_count_is_ge_fxc, \
&&lb_count_is_ge_fcx, \
&&lb_count_is_ge_fss, \
&&lb_count_is_integer_fx, \
&&lb_count_is_integer_fy, \
&&lb_count_is_integer_allocate_fxtt, \
&&lb_count_is_list_fx, \
&&lb_count_is_list_fy, \
&&lb_count_is_lt_fxx, \
&&lb_count_is_lt_fxc, \
&&lb_count_is_lt_fcx, \
&&lb_count_is_lt_fss, \
&&lb_count_is_map_fx, \
&&lb_count_is_map_fy, \
&&lb_count_is_ne_fSs, \
&&lb_count_is_ne_exact_fSS, \
&&lb_count_is_nil_fx, \
&&lb_count_is_nil_fy, \
&&lb_count_is_nonempty_list_fx, \
&&lb_count_is_nonempty_list_fy, \
&&lb_count_is_nonempty_list_allocate_frtt, \
&&lb_count_is_nonempty_list_allocate_fxtt, \
&&lb_count_is_nonempty_list_get_hd_fxx, \
&&lb_count_is_nonempty_list_get_list_frxx, \
&&lb_count_is_nonempty_list_get_list_fxxx, \
&&lb_count_is_nonempty_list_get_tl_fxx, \
&&lb_count_is_number_fx, \
&&lb_count_is_number_fy, \
&&lb_count_is_pid_fx, \
&&lb_count_is_pid_fy, \
&&lb_count_is_port_fx, \
&&lb_count_is_port_fy, \
&&lb_count_is_reference_fx, \
&&lb_count_is_reference_fy, \
&&lb_count_is_tagged_tuple_frAa, \
&&lb_count_is_tagged_tuple_fxAa, \
&&lb_count_is_tagged_tuple_fyAa, \
&&lb_count_is_tagged_tuple_ff_ffrAa, \
&&lb_count_is_tagged_tuple_ff_ffxAa, \
&&lb_count_is_tuple_fr, \
&&lb_count_is_tuple_fx, \
&&lb_count_is_tuple_fy, \
&&lb_count_is_tuple_of_arity_frA, \
&&lb_count_is_tuple_of_arity_fxA, \
&&lb_count_is_tuple_of_arity_fyA, \
&&lb_count_jump_f, \
&&lb_count_label_L, \
&&lb_count_line_I, \
&&lb_count_loop_rec_end_f, \
&&lb_count_move_nx, \
&&lb_count_move_rx, \
&&lb_count_move_ry, \
&&lb_count_move_xr, \
&&lb_count_move_xx, \
&&lb_count_move_xy, \
&&lb_count_move_yr, \
&&lb_count_move_yx, \
&&lb_count_move_yy, \
&&lb_count_move_cr, \
&&lb_count_move_cx, \
&&lb_count_move_cy, \
&&lb_count_move2_par_xxxx, \
&&lb_count_move2_par_xxxy, \
&&lb_count_move2_par_yxxx, \
&&lb_count_move2_par_yxxy, \
&&lb_count_move2_par_yxyx, \
&&lb_count_move3_xxxxxx, \
&&lb_count_move3_yxyxyx, \
&&lb_count_move_call_xf, \
&&lb_count_move_call_yf, \
&&lb_count_move_call_cf, \
&&lb_count_move_call_last_xfQ, \
&&lb_count_move_call_last_yfQ, \
&&lb_count_move_call_last_cfQ, \
&&lb_count_move_call_only_xf, \
&&lb_count_move_call_only_cf, \
&&lb_count_move_deallocate_return_nQ, \
&&lb_count_move_deallocate_return_xQ, \
&&lb_count_move_deallocate_return_yQ, \
&&lb_count_move_deallocate_return_cQ, \
&&lb_count_move_jump_fxx, \
&&lb_count_move_jump_fxy, \
&&lb_count_move_jump_fyx, \
&&lb_count_move_jump_fyy, \
&&lb_count_move_jump_fcr, \
&&lb_count_move_jump_fcx, \
&&lb_count_move_jump_fcy, \
&&lb_count_move_return_n, \
&&lb_count_move_return_x, \
&&lb_count_move_return_c, \
&&lb_count_move_shift_nyx, \
&&lb_count_move_shift_xxx, \
&&lb_count_move_shift_xxy, \
&&lb_count_move_shift_xyx, \
&&lb_count_move_shift_yry, \
&&lb_count_move_shift_yxx, \
&&lb_count_move_shift_cxx, \
&&lb_count_move_src_window2_yxx, \
&&lb_count_move_src_window3_yxxx, \
&&lb_count_move_src_window4_yxxxx, \
&&lb_count_move_trim_yxt, \
&&lb_count_move_window2_xxy, \
&&lb_count_move_window3_xxxy, \
&&lb_count_move_window4_xxxxy, \
&&lb_count_move_window5_xxxxxy, \
&&lb_count_move_x1_c, \
&&lb_count_move_x2_c, \
&&lb_count_new_map_dtI, \
&&lb_count_node_x, \
&&lb_count_node_y, \
&&lb_count_normal_exit, \
&&lb_count_on_load, \
&&lb_count_put_list_rnr, \
&&lb_count_put_list_rnx, \
&&lb_count_put_list_rxr, \
&&lb_count_put_list_rxx, \
&&lb_count_put_list_xnx, \
&&lb_count_put_list_xny, \
&&lb_count_put_list_xxr, \
&&lb_count_put_list_xxx, \
&&lb_count_put_list_xyx, \
&&lb_count_put_list_ynx, \
&&lb_count_put_list_yny, \
&&lb_count_put_list_yxx, \
&&lb_count_put_list_yyx, \
&&lb_count_put_list_xcx, \
&&lb_count_put_list_ycx, \
&&lb_count_put_list_cxx, \
&&lb_count_put_list_cyx, \
&&lb_count_put_list_ssd, \
&&lb_count_put_tuple2_xI, \
&&lb_count_put_tuple2_yI, \
&&lb_count_raw_raise, \
&&lb_count_remove_message, \
&&lb_count_return, \
&&lb_count_return_trace, \
&&lb_count_self_x, \
&&lb_count_self_y, \
&&lb_count_send, \
&&lb_count_set_tuple_element_sSP, \
&&lb_count_swap_xx, \
&&lb_count_swap_yx, \
&&lb_count_swap_yy, \
&&lb_count_swap_temp_xxx, \
&&lb_count_system_limit_j, \
&&lb_count_test_arity_fxA, \
&&lb_count_test_arity_fyA, \
&&lb_count_test_arity_get_tuple_element_fxAPx, \
&&lb_count_test_heap_It, \
&&lb_count_test_heap_1_put_list_Iy, \
&&lb_count_timeout, \
&&lb_count_timeout_locked, \
&&lb_count_trace_jump_W, \
&&lb_count_try_case_y, \
&&lb_count_try_case_end_s, \
&&lb_count_try_end_y, \
&&lb_count_update_list_xx, \
&&lb_count_update_list_yx, \
&&lb_count_update_list_cx, \
&&lb_count_update_map_assoc_xdtI, \
&&lb_count_update_map_assoc_ydtI, \
&&lb_count_update_map_assoc_cdtI, \
&&lb_count_update_map_exact_xjdtI, \
&&lb_count_update_map_exact_yjdtI, \
&&lb_count_wait_locked_f, \
&&lb_count_wait_timeout_locked_sf, \
&&lb_count_wait_timeout_locked_int_If, \
&&lb_count_wait_timeout_unlocked_sf, \
&&lb_count_wait_timeout_unlocked_int_If, \
&&lb_count_wait_unlocked_f,

#define DEFINE_COUNTING_LABELS \
CountCase(allocate_tt): erts_instr_count[0]++; goto lb_allocate_tt; \
CountCase(allocate_heap_tIt): erts_instr_count[1]++; goto lb_allocate_heap_tIt; \
CountCase(allocate_heap_zero_tIt): erts_instr_count[2]++; goto lb_allocate_heap_zero_tIt; \
CountCase(allocate_init_tty): erts_instr_count[3]++; goto lb_allocate_init_tty; \
CountCase(allocate_zero_tt): erts_instr_count[4]++; goto lb_allocate_zero_tt; \
CountCase(apply_t): erts_instr_count[5]++; goto lb_apply_t; \
CountCase(apply_bif): erts_instr_count[6]++; goto lb_apply_bif; \
CountCase(apply_last_tQ): erts_instr_count[7]++; goto lb_apply_last_tQ; \
CountCase(badarg_j): erts_instr_count[8]++; goto lb_badarg_j; \
CountCase(badmatch_x): erts_instr_count[9]++; goto lb_badmatch_x; \
CountCase(bs_add_jsstx): erts_instr_count[10]++; goto lb_bs_add_jsstx; \
CountCase(bs_context_to_binary_x): erts_instr_count[11]++; goto lb_bs_context_to_binary_x; \
CountCase(bs_get_tail_xdt): erts_instr_count[12]++; goto lb_bs_get_tail_xdt; \
CountCase(bs_get_tail_ydt): erts_instr_count[13]++; goto lb_bs_get_tail_ydt; \
CountCase(bs_init_writable): erts_instr_count[14]++; goto lb_bs_init_writable; \
CountCase(bs_put_string_WW): erts_instr_count[15]++; goto lb_bs_put_string_WW; \
CountCase(bs_put_utf16_jtS): erts_instr_count[16]++; goto lb_bs_put_utf16_jtS; \
CountCase(bs_set_position_xx): erts_instr_count[17]++; goto lb_bs_set_position_xx; \
CountCase(bs_set_position_xy): erts_instr_count[18]++; goto lb_bs_set_position_xy; \
CountCase(bs_set_position_yx): erts_instr_count[19]++; goto lb_bs_set_position_yx; \
CountCase(bs_set_position_yy): erts_instr_count[20]++; goto lb_bs_set_position_yy; \
CountCase(bs_test_tail_imm2_fxW): erts_instr_count[21]++; goto lb_bs_test_tail_imm2_fxW; \
CountCase(bs_test_tail_imm2_fyW): erts_instr_count[22]++; goto lb_bs_test_tail_imm2_fyW; \
CountCase(bs_test_unit_fxt): erts_instr_count[23]++; goto lb_bs_test_unit_fxt; \
CountCase(bs_test_unit_fyt): erts_instr_count[24]++; goto lb_bs_test_unit_fyt; \
CountCase(bs_test_unit8_fx): erts_instr_count[25]++; goto lb_bs_test_unit8_fx; \
CountCase(bs_test_unit8_fy): erts_instr_count[26]++; goto lb_bs_test_unit8_fy; \
CountCase(bs_test_zero_tail2_fx): erts_instr_count[27]++; goto lb_bs_test_zero_tail2_fx; \
CountCase(bs_test_zero_tail2_fy): erts_instr_count[28]++; goto lb_bs_test_zero_tail2_fy; \
CountCase(build_stacktrace): erts_instr_count[29]++; goto lb_build_stacktrace; \
CountCase(call_bif_e): erts_instr_count[30]++; goto lb_call_bif_e; \
CountCase(call_bif_only_e): erts_instr_count[31]++; goto lb_call_bif_only_e; \
CountCase(call_error_handler): erts_instr_count[32]++; goto lb_call_error_handler; \
CountCase(call_nif): erts_instr_count[33]++; goto lb_call_nif; \
CountCase(case_end_x): erts_instr_count[34]++; goto lb_case_end_x; \
CountCase(catch_yf): erts_instr_count[35]++; goto lb_catch_yf; \
CountCase(catch_end_y): erts_instr_count[36]++; goto lb_catch_end_y; \
CountCase(cold_is_function2_fxx): erts_instr_count[37]++; goto lb_cold_is_function2_fxx; \
CountCase(continue_exit): erts_instr_count[38]++; goto lb_continue_exit; \
CountCase(deallocate_Q): erts_instr_count[39]++; goto lb_deallocate_Q; \
CountCase(deallocate_return_Q): erts_instr_count[40]++; goto lb_deallocate_return_Q; \
CountCase(ensure_map_x): erts_instr_count[41]++; goto lb_ensure_map_x; \
CountCase(error_action_code): erts_instr_count[42]++; goto lb_error_action_code; \
CountCase(fconv_Sl): erts_instr_count[43]++; goto lb_fconv_Sl; \
CountCase(fload_ql): erts_instr_count[44]++; goto lb_fload_ql; \
CountCase(fload_Sl): erts_instr_count[45]++; goto lb_fload_Sl; \
CountCase(fstore_ld): erts_instr_count[46]++; goto lb_fstore_ld; \
CountCase(get_hd_xx): erts_instr_count[47]++; goto lb_get_hd_xx; \
CountCase(get_hd_xy): erts_instr_count[48]++; goto lb_get_hd_xy; \
CountCase(get_hd_yx): erts_instr_count[49]++; goto lb_get_hd_yx; \
CountCase(get_hd_yy): erts_instr_count[50]++; goto lb_get_hd_yy; \
CountCase(get_list_rry): erts_instr_count[51]++; goto lb_get_list_rry; \
CountCase(get_list_rxr): erts_instr_count[52]++; goto lb_get_list_rxr; \
CountCase(get_list_rxx): erts_instr_count[53]++; goto lb_get_list_rxx; \
CountCase(get_list_rxy): erts_instr_count[54]++; goto lb_get_list_rxy; \
CountCase(get_list_ryr): erts_instr_count[55]++; goto lb_get_list_ryr; \
CountCase(get_list_xrx): erts_instr_count[56]++; goto lb_get_list_xrx; \
CountCase(get_list_xxx): erts_instr_count[57]++; goto lb_get_list_xxx; \
CountCase(get_list_xxy): erts_instr_count[58]++; goto lb_get_list_xxy; \
CountCase(get_list_xyx): erts_instr_count[59]++; goto lb_get_list_xyx; \
CountCase(get_list_xyy): erts_instr_count[60]++; goto lb_get_list_xyy; \
CountCase(get_list_yxx): erts_instr_count[61]++; goto lb_get_list_yxx; \
CountCase(get_list_yxy): erts_instr_count[62]++; goto lb_get_list_yxy; \
CountCase(get_list_yyx): erts_instr_count[63]++; goto lb_get_list_yyx; \
CountCase(get_list_yyy): erts_instr_count[64]++; goto lb_get_list_yyy; \
CountCase(get_tl_xx): erts_instr_count[65]++; goto lb_get_tl_xx; \
CountCase(get_tl_xy): erts_instr_count[66]++; goto lb_get_tl_xy; \
CountCase(get_tl_yx): erts_instr_count[67]++; goto lb_get_tl_yx; \
CountCase(get_tl_yy): erts_instr_count[68]++; goto lb_get_tl_yy; \
CountCase(hipe_call_count): erts_instr_count[69]++; goto lb_hipe_call_count; \
CountCase(hipe_trap_call): erts_instr_count[70]++; goto lb_hipe_trap_call; \
CountCase(hipe_trap_call_closure): erts_instr_count[71]++; goto lb_hipe_trap_call_closure; \
CountCase(hipe_trap_resume): erts_instr_count[72]++; goto lb_hipe_trap_resume; \
CountCase(hipe_trap_return): erts_instr_count[73]++; goto lb_hipe_trap_return; \
CountCase(hipe_trap_throw): erts_instr_count[74]++; goto lb_hipe_trap_throw; \
CountCase(hot_is_function2_fSt): erts_instr_count[75]++; goto lb_hot_is_function2_fSt; \
CountCase(i_apply): erts_instr_count[76]++; goto lb_i_apply; \
CountCase(i_apply_fun): erts_instr_count[77]++; goto lb_i_apply_fun; \
CountCase(i_apply_fun_last_Q): erts_instr_count[78]++; goto lb_i_apply_fun_last_Q; \
CountCase(i_apply_fun_only): erts_instr_count[79]++; goto lb_i_apply_fun_only; \
CountCase(i_apply_last_Q): erts_instr_count[80]++; goto lb_i_apply_last_Q; \
CountCase(i_apply_only): erts_instr_count[81]++; goto lb_i_apply_only; \
CountCase(i_band_xcjd): erts_instr_count[82]++; goto lb_i_band_xcjd; \
CountCase(i_band_ssjd): erts_instr_count[83]++; goto lb_i_band_ssjd; \
CountCase(i_bif1_sfbd): erts_instr_count[84]++; goto lb_i_bif1_sfbd; \
CountCase(i_bif1_body_sbd): erts_instr_count[85]++; goto lb_i_bif1_body_sbd; \
CountCase(i_bif2_ssfbd): erts_instr_count[86]++; goto lb_i_bif2_ssfbd; \
CountCase(i_bif2_body_ssbd): erts_instr_count[87]++; goto lb_i_bif2_body_ssbd; \
CountCase(i_bif3_sssfbd): erts_instr_count[88]++; goto lb_i_bif3_sssfbd; \
CountCase(i_bif3_body_sssbd): erts_instr_count[89]++; goto lb_i_bif3_body_sssbd; \
CountCase(i_bor_jssd): erts_instr_count[90]++; goto lb_i_bor_jssd; \
CountCase(i_bs_append_jIttsx): erts_instr_count[91]++; goto lb_i_bs_append_jIttsx; \
CountCase(i_bs_append_jIttsy): erts_instr_count[92]++; goto lb_i_bs_append_jIttsy; \
CountCase(i_bs_get_binary2_xftstd): erts_instr_count[93]++; goto lb_i_bs_get_binary2_xftstd; \
CountCase(i_bs_get_binary2_yftstd): erts_instr_count[94]++; goto lb_i_bs_get_binary2_yftstd; \
CountCase(i_bs_get_binary_all2_xfttd): erts_instr_count[95]++; goto lb_i_bs_get_binary_all2_xfttd; \
CountCase(i_bs_get_binary_all2_yfttd): erts_instr_count[96]++; goto lb_i_bs_get_binary_all2_yfttd; \
CountCase(i_bs_get_binary_imm2_xftWtd): erts_instr_count[97]++; goto lb_i_bs_get_binary_imm2_xftWtd; \
CountCase(i_bs_get_binary_imm2_yftWtd): erts_instr_count[98]++; goto lb_i_bs_get_binary_imm2_yftWtd; \
CountCase(i_bs_get_float2_xftstd): erts_instr_count[99]++; goto lb_i_bs_get_float2_xftstd; \
CountCase(i_bs_get_float2_yftstd): erts_instr_count[100]++; goto lb_i_bs_get_float2_yftstd; \
CountCase(i_bs_get_integer_xfttsd): erts_instr_count[101]++; goto lb_i_bs_get_integer_xfttsd; \
CountCase(i_bs_get_integer_yfttsd): erts_instr_count[102]++; goto lb_i_bs_get_integer_yfttsd; \
CountCase(i_bs_get_integer_16_xfd): erts_instr_count[103]++; goto lb_i_bs_get_integer_16_xfd; \
CountCase(i_bs_get_integer_16_yfd): erts_instr_count[104]++; goto lb_i_bs_get_integer_16_yfd; \
CountCase(i_bs_get_integer_32_xfd): erts_instr_count[105]++; goto lb_i_bs_get_integer_32_xfd; \
CountCase(i_bs_get_integer_32_yfd): erts_instr_count[106]++; goto lb_i_bs_get_integer_32_yfd; \
CountCase(i_bs_get_integer_8_xfd): erts_instr_count[107]++; goto lb_i_bs_get_integer_8_xfd; \
CountCase(i_bs_get_integer_8_yfd): erts_instr_count[108]++; goto lb_i_bs_get_integer_8_yfd; \
CountCase(i_bs_get_integer_imm_xWtftx): erts_instr_count[109]++; goto lb_i_bs_get_integer_imm_xWtftx; \
CountCase(i_bs_get_integer_imm_yWtftx): erts_instr_count[110]++; goto lb_i_bs_get_integer_imm_yWtftx; \
CountCase(i_bs_get_integer_small_imm_xWftx): erts_instr_count[111]++; goto lb_i_bs_get_integer_small_imm_xWftx; \
CountCase(i_bs_get_integer_small_imm_yWftx): erts_instr_count[112]++; goto lb_i_bs_get_integer_small_imm_yWftx; \
CountCase(i_bs_get_position_xx): erts_instr_count[113]++; goto lb_i_bs_get_position_xx; \
CountCase(i_bs_get_position_xy): erts_instr_count[114]++; goto lb_i_bs_get_position_xy; \
CountCase(i_bs_get_position_yx): erts_instr_count[115]++; goto lb_i_bs_get_position_yx; \
CountCase(i_bs_get_position_yy): erts_instr_count[116]++; goto lb_i_bs_get_position_yy; \
CountCase(i_bs_get_utf16_xftd): erts_instr_count[117]++; goto lb_i_bs_get_utf16_xftd; \
CountCase(i_bs_get_utf16_yftd): erts_instr_count[118]++; goto lb_i_bs_get_utf16_yftd; \
CountCase(i_bs_get_utf8_xfd): erts_instr_count[119]++; goto lb_i_bs_get_utf8_xfd; \
CountCase(i_bs_get_utf8_yfd): erts_instr_count[120]++; goto lb_i_bs_get_utf8_yfd; \
CountCase(i_bs_init_Wtx): erts_instr_count[121]++; goto lb_i_bs_init_Wtx; \
CountCase(i_bs_init_bits_Wtx): erts_instr_count[122]++; goto lb_i_bs_init_bits_Wtx; \
CountCase(i_bs_init_bits_fail_xjtx): erts_instr_count[123]++; goto lb_i_bs_init_bits_fail_xjtx; \
CountCase(i_bs_init_bits_fail_yjtx): erts_instr_count[124]++; goto lb_i_bs_init_bits_fail_yjtx; \
CountCase(i_bs_init_bits_fail_heap_sIjtx): erts_instr_count[125]++; goto lb_i_bs_init_bits_fail_heap_sIjtx; \
CountCase(i_bs_init_bits_heap_WItx): erts_instr_count[126]++; goto lb_i_bs_init_bits_heap_WItx; \
CountCase(i_bs_init_fail_xjtx): erts_instr_count[127]++; goto lb_i_bs_init_fail_xjtx; \
CountCase(i_bs_init_fail_yjtx): erts_instr_count[128]++; goto lb_i_bs_init_fail_yjtx; \
CountCase(i_bs_init_fail_heap_sIjtx): erts_instr_count[129]++; goto lb_i_bs_init_fail_heap_sIjtx; \
CountCase(i_bs_init_heap_WItx): erts_instr_count[130]++; goto lb_i_bs_init_heap_WItx; \
CountCase(i_bs_match_string_xfWW): erts_instr_count[131]++; goto lb_i_bs_match_string_xfWW; \
CountCase(i_bs_match_string_yfWW): erts_instr_count[132]++; goto lb_i_bs_match_string_yfWW; \
CountCase(i_bs_private_append_jtsSx): erts_instr_count[133]++; goto lb_i_bs_private_append_jtsSx; \
CountCase(i_bs_put_utf8_jS): erts_instr_count[134]++; goto lb_i_bs_put_utf8_jS; \
CountCase(i_bs_restore2_xt): erts_instr_count[135]++; goto lb_i_bs_restore2_xt; \
CountCase(i_bs_save2_xt): erts_instr_count[136]++; goto lb_i_bs_save2_xt; \
CountCase(i_bs_skip_bits2_xxft): erts_instr_count[137]++; goto lb_i_bs_skip_bits2_xxft; \
CountCase(i_bs_skip_bits2_xyft): erts_instr_count[138]++; goto lb_i_bs_skip_bits2_xyft; \
CountCase(i_bs_skip_bits2_yxft): erts_instr_count[139]++; goto lb_i_bs_skip_bits2_yxft; \
CountCase(i_bs_skip_bits2_yyft): erts_instr_count[140]++; goto lb_i_bs_skip_bits2_yyft; \
CountCase(i_bs_skip_bits_imm2_fxW): erts_instr_count[141]++; goto lb_i_bs_skip_bits_imm2_fxW; \
CountCase(i_bs_skip_bits_imm2_fyW): erts_instr_count[142]++; goto lb_i_bs_skip_bits_imm2_fyW; \
CountCase(i_bs_start_match2_xfttd): erts_instr_count[143]++; goto lb_i_bs_start_match2_xfttd; \
CountCase(i_bs_start_match2_yfttd): erts_instr_count[144]++; goto lb_i_bs_start_match2_yfttd; \
CountCase(i_bs_start_match3_xtfd): erts_instr_count[145]++; goto lb_i_bs_start_match3_xtfd; \
CountCase(i_bs_start_match3_ytfd): erts_instr_count[146]++; goto lb_i_bs_start_match3_ytfd; \
CountCase(i_bs_start_match3_gp_xtfdx): erts_instr_count[147]++; goto lb_i_bs_start_match3_gp_xtfdx; \
CountCase(i_bs_start_match3_gp_ytfdx): erts_instr_count[148]++; goto lb_i_bs_start_match3_gp_ytfdx; \
CountCase(i_bs_utf16_size_Sx): erts_instr_count[149]++; goto lb_i_bs_utf16_size_Sx; \
CountCase(i_bs_utf8_size_Sx): erts_instr_count[150]++; goto lb_i_bs_utf8_size_Sx; \
CountCase(i_bs_validate_unicode_jS): erts_instr_count[151]++; goto lb_i_bs_validate_unicode_jS; \
CountCase(i_bs_validate_unicode_retract_jsS): erts_instr_count[152]++; goto lb_i_bs_validate_unicode_retract_jsS; \
CountCase(i_bsl_ssjd): erts_instr_count[153]++; goto lb_i_bsl_ssjd; \
CountCase(i_bsr_ssjd): erts_instr_count[154]++; goto lb_i_bsr_ssjd; \
CountCase(i_bxor_jssd): erts_instr_count[155]++; goto lb_i_bxor_jssd; \
CountCase(i_call_f): erts_instr_count[156]++; goto lb_i_call_f; \
CountCase(i_call_ext_e): erts_instr_count[157]++; goto lb_i_call_ext_e; \
CountCase(i_call_ext_last_eQ): erts_instr_count[158]++; goto lb_i_call_ext_last_eQ; \
CountCase(i_call_ext_only_e): erts_instr_count[159]++; goto lb_i_call_ext_only_e; \
CountCase(i_call_fun_t): erts_instr_count[160]++; goto lb_i_call_fun_t; \
CountCase(i_call_fun_last_tQ): erts_instr_count[161]++; goto lb_i_call_fun_last_tQ; \
CountCase(i_call_last_fQ): erts_instr_count[162]++; goto lb_i_call_last_fQ; \
CountCase(i_call_only_f): erts_instr_count[163]++; goto lb_i_call_only_f; \
CountCase(i_debug_breakpoint): erts_instr_count[164]++; goto lb_i_debug_breakpoint; \
CountCase(i_element_xjsd): erts_instr_count[165]++; goto lb_i_element_xjsd; \
CountCase(i_element_yjsd): erts_instr_count[166]++; goto lb_i_element_yjsd; \
CountCase(i_fadd_lll): erts_instr_count[167]++; goto lb_i_fadd_lll; \
CountCase(i_fast_element_xjId): erts_instr_count[168]++; goto lb_i_fast_element_xjId; \
CountCase(i_fast_element_yjId): erts_instr_count[169]++; goto lb_i_fast_element_yjId; \
CountCase(i_fdiv_lll): erts_instr_count[170]++; goto lb_i_fdiv_lll; \
CountCase(i_fmul_lll): erts_instr_count[171]++; goto lb_i_fmul_lll; \
CountCase(i_fnegate_ll): erts_instr_count[172]++; goto lb_i_fnegate_ll; \
CountCase(i_fsub_lll): erts_instr_count[173]++; goto lb_i_fsub_lll; \
CountCase(i_func_info_IaaI): erts_instr_count[174]++; goto lb_i_func_info_IaaI; \
CountCase(i_generic_breakpoint): erts_instr_count[175]++; goto lb_i_generic_breakpoint; \
CountCase(i_get_sd): erts_instr_count[176]++; goto lb_i_get_sd; \
CountCase(i_get_hash_cId): erts_instr_count[177]++; goto lb_i_get_hash_cId; \
CountCase(i_get_map_element_fxxx): erts_instr_count[178]++; goto lb_i_get_map_element_fxxx; \
CountCase(i_get_map_element_fxxy): erts_instr_count[179]++; goto lb_i_get_map_element_fxxy; \
CountCase(i_get_map_element_fxyx): erts_instr_count[180]++; goto lb_i_get_map_element_fxyx; \
CountCase(i_get_map_element_fxyy): erts_instr_count[181]++; goto lb_i_get_map_element_fxyy; \
CountCase(i_get_map_element_fyxx): erts_instr_count[182]++; goto lb_i_get_map_element_fyxx; \
CountCase(i_get_map_element_fyxy): erts_instr_count[183]++; goto lb_i_get_map_element_fyxy; \
CountCase(i_get_map_element_fyyx): erts_instr_count[184]++; goto lb_i_get_map_element_fyyx; \
CountCase(i_get_map_element_fyyy): erts_instr_count[185]++; goto lb_i_get_map_element_fyyy; \
CountCase(i_get_map_element_hash_fxcIx): erts_instr_count[186]++; goto lb_i_get_map_element_hash_fxcIx; \
CountCase(i_get_map_element_hash_fxcIy): erts_instr_count[187]++; goto lb_i_get_map_element_hash_fxcIy; \
CountCase(i_get_map_element_hash_fycIx): erts_instr_count[188]++; goto lb_i_get_map_element_hash_fycIx; \
CountCase(i_get_map_element_hash_fycIy): erts_instr_count[189]++; goto lb_i_get_map_element_hash_fycIy; \
CountCase(i_get_map_elements_fsI): erts_instr_count[190]++; goto lb_i_get_map_elements_fsI; \
CountCase(i_get_tuple_element_xPx): erts_instr_count[191]++; goto lb_i_get_tuple_element_xPx; \
CountCase(i_get_tuple_element_xPy): erts_instr_count[192]++; goto lb_i_get_tuple_element_xPy; \
CountCase(i_get_tuple_element_yPx): erts_instr_count[193]++; goto lb_i_get_tuple_element_yPx; \
CountCase(i_get_tuple_element_yPy): erts_instr_count[194]++; goto lb_i_get_tuple_element_yPy; \
CountCase(i_get_tuple_element2_xPx): erts_instr_count[195]++; goto lb_i_get_tuple_element2_xPx; \
CountCase(i_get_tuple_element2_dst_xPxx): erts_instr_count[196]++; goto lb_i_get_tuple_element2_dst_xPxx; \
CountCase(i_get_tuple_element2_dst_xPyy): erts_instr_count[197]++; goto lb_i_get_tuple_element2_dst_xPyy; \
CountCase(i_get_tuple_element3_xPx): erts_instr_count[198]++; goto lb_i_get_tuple_element3_xPx; \
CountCase(i_hibernate): erts_instr_count[199]++; goto lb_i_hibernate; \
CountCase(i_increment_rWd): erts_instr_count[200]++; goto lb_i_increment_rWd; \
CountCase(i_increment_xWd): erts_instr_count[201]++; goto lb_i_increment_xWd; \
CountCase(i_increment_yWd): erts_instr_count[202]++; goto lb_i_increment_yWd; \
CountCase(i_int_bnot_jSd): erts_instr_count[203]++; goto lb_i_int_bnot_jSd; \
CountCase(i_int_div_jssd): erts_instr_count[204]++; goto lb_i_int_div_jssd; \
CountCase(i_is_eq_exact_immed_frc): erts_instr_count[205]++; goto lb_i_is_eq_exact_immed_frc; \
CountCase(i_is_eq_exact_immed_fxc): erts_instr_count[206]++; goto lb_i_is_eq_exact_immed_fxc; \
CountCase(i_is_eq_exact_immed_fyc): erts_instr_count[207]++; goto lb_i_is_eq_exact_immed_fyc; \
CountCase(i_is_eq_exact_literal_fxc): erts_instr_count[208]++; goto lb_i_is_eq_exact_literal_fxc; \
CountCase(i_is_eq_exact_literal_fyc): erts_instr_count[209]++; goto lb_i_is_eq_exact_literal_fyc; \
CountCase(i_is_ne_exact_immed_fxc): erts_instr_count[210]++; goto lb_i_is_ne_exact_immed_fxc; \
CountCase(i_is_ne_exact_immed_fyc): erts_instr_count[211]++; goto lb_i_is_ne_exact_immed_fyc; \
CountCase(i_is_ne_exact_literal_fxc): erts_instr_count[212]++; goto lb_i_is_ne_exact_literal_fxc; \
CountCase(i_is_ne_exact_literal_fyc): erts_instr_count[213]++; goto lb_i_is_ne_exact_literal_fyc; \
CountCase(i_jump_on_val_xfIW): erts_instr_count[214]++; goto lb_i_jump_on_val_xfIW; \
CountCase(i_jump_on_val_yfIW): erts_instr_count[215]++; goto lb_i_jump_on_val_yfIW; \
CountCase(i_jump_on_val_zero_xfI): erts_instr_count[216]++; goto lb_i_jump_on_val_zero_xfI; \
CountCase(i_jump_on_val_zero_yfI): erts_instr_count[217]++; goto lb_i_jump_on_val_zero_yfI; \
CountCase(i_length_jtd): erts_instr_count[218]++; goto lb_i_length_jtd; \
CountCase(i_length_setup_tx): erts_instr_count[219]++; goto lb_i_length_setup_tx; \
CountCase(i_length_setup_ty): erts_instr_count[220]++; goto lb_i_length_setup_ty; \
CountCase(i_loop_rec_f): erts_instr_count[221]++; goto lb_i_loop_rec_f; \
CountCase(i_m_div_jssd): erts_instr_count[222]++; goto lb_i_m_div_jssd; \
CountCase(i_make_fun_Wt): erts_instr_count[223]++; goto lb_i_make_fun_Wt; \
CountCase(i_minus_xxjd): erts_instr_count[224]++; goto lb_i_minus_xxjd; \
CountCase(i_minus_xyjd): erts_instr_count[225]++; goto lb_i_minus_xyjd; \
CountCase(i_minus_yxjd): erts_instr_count[226]++; goto lb_i_minus_yxjd; \
CountCase(i_minus_yyjd): erts_instr_count[227]++; goto lb_i_minus_yyjd; \
CountCase(i_minus_cxjd): erts_instr_count[228]++; goto lb_i_minus_cxjd; \
CountCase(i_minus_cyjd): erts_instr_count[229]++; goto lb_i_minus_cyjd; \
CountCase(i_move_call_ext_ce): erts_instr_count[230]++; goto lb_i_move_call_ext_ce; \
CountCase(i_move_call_ext_last_eQc): erts_instr_count[231]++; goto lb_i_move_call_ext_last_eQc; \
CountCase(i_move_call_ext_only_ec): erts_instr_count[232]++; goto lb_i_move_call_ext_only_ec; \
CountCase(i_new_bs_put_binary_jStS): erts_instr_count[233]++; goto lb_i_new_bs_put_binary_jStS; \
CountCase(i_new_bs_put_binary_all_xjt): erts_instr_count[234]++; goto lb_i_new_bs_put_binary_all_xjt; \
CountCase(i_new_bs_put_binary_all_yjt): erts_instr_count[235]++; goto lb_i_new_bs_put_binary_all_yjt; \
CountCase(i_new_bs_put_binary_imm_jWS): erts_instr_count[236]++; goto lb_i_new_bs_put_binary_imm_jWS; \
CountCase(i_new_bs_put_float_jSts): erts_instr_count[237]++; goto lb_i_new_bs_put_float_jSts; \
CountCase(i_new_bs_put_float_imm_jWts): erts_instr_count[238]++; goto lb_i_new_bs_put_float_imm_jWts; \
CountCase(i_new_bs_put_integer_jSts): erts_instr_count[239]++; goto lb_i_new_bs_put_integer_jSts; \
CountCase(i_new_bs_put_integer_imm_xjWt): erts_instr_count[240]++; goto lb_i_new_bs_put_integer_imm_xjWt; \
CountCase(i_new_bs_put_integer_imm_yjWt): erts_instr_count[241]++; goto lb_i_new_bs_put_integer_imm_yjWt; \
CountCase(i_new_bs_put_integer_imm_cjWt): erts_instr_count[242]++; goto lb_i_new_bs_put_integer_imm_cjWt; \
CountCase(i_new_small_map_lit_dtq): erts_instr_count[243]++; goto lb_i_new_small_map_lit_dtq; \
CountCase(i_perf_counter): erts_instr_count[244]++; goto lb_i_perf_counter; \
CountCase(i_plus_xxjd): erts_instr_count[245]++; goto lb_i_plus_xxjd; \
CountCase(i_plus_xyjd): erts_instr_count[246]++; goto lb_i_plus_xyjd; \
CountCase(i_plus_yxjd): erts_instr_count[247]++; goto lb_i_plus_yxjd; \
CountCase(i_plus_yyjd): erts_instr_count[248]++; goto lb_i_plus_yyjd; \
CountCase(i_plus_xcjd): erts_instr_count[249]++; goto lb_i_plus_xcjd; \
CountCase(i_plus_ycjd): erts_instr_count[250]++; goto lb_i_plus_ycjd; \
CountCase(i_raise): erts_instr_count[251]++; goto lb_i_raise; \
CountCase(i_recv_mark): erts_instr_count[252]++; goto lb_i_recv_mark; \
CountCase(i_recv_set): erts_instr_count[253]++; goto lb_i_recv_set; \
CountCase(i_rem_xxjd): erts_instr_count[254]++; goto lb_i_rem_xxjd; \
CountCase(i_rem_ssjd): erts_instr_count[255]++; goto lb_i_rem_ssjd; \
CountCase(i_return_time_trace): erts_instr_count[256]++; goto lb_i_return_time_trace; \
CountCase(i_return_to_trace): erts_instr_count[257]++; goto lb_i_return_to_trace; \
CountCase(i_select_tuple_arity_xfI): erts_instr_count[258]++; goto lb_i_select_tuple_arity_xfI; \
CountCase(i_select_tuple_arity_yfI): erts_instr_count[259]++; goto lb_i_select_tuple_arity_yfI; \
CountCase(i_select_tuple_arity2_xfAA): erts_instr_count[260]++; goto lb_i_select_tuple_arity2_xfAA; \
CountCase(i_select_tuple_arity2_yfAA): erts_instr_count[261]++; goto lb_i_select_tuple_arity2_yfAA; \
CountCase(i_select_val2_xfcc): erts_instr_count[262]++; goto lb_i_select_val2_xfcc; \
CountCase(i_select_val2_yfcc): erts_instr_count[263]++; goto lb_i_select_val2_yfcc; \
CountCase(i_select_val_bins_xfI): erts_instr_count[264]++; goto lb_i_select_val_bins_xfI; \
CountCase(i_select_val_bins_yfI): erts_instr_count[265]++; goto lb_i_select_val_bins_yfI; \
CountCase(i_select_val_lins_xfI): erts_instr_count[266]++; goto lb_i_select_val_lins_xfI; \
CountCase(i_select_val_lins_yfI): erts_instr_count[267]++; goto lb_i_select_val_lins_yfI; \
CountCase(i_times_jssd): erts_instr_count[268]++; goto lb_i_times_jssd; \
CountCase(i_trim_t): erts_instr_count[269]++; goto lb_i_trim_t; \
CountCase(i_wait_error): erts_instr_count[270]++; goto lb_i_wait_error; \
CountCase(i_wait_error_locked): erts_instr_count[271]++; goto lb_i_wait_error_locked; \
CountCase(i_yield): erts_instr_count[272]++; goto lb_i_yield; \
CountCase(if_end): erts_instr_count[273]++; goto lb_if_end; \
CountCase(init_y): erts_instr_count[274]++; goto lb_init_y; \
CountCase(init2_yy): erts_instr_count[275]++; goto lb_init2_yy; \
CountCase(init3_yyy): erts_instr_count[276]++; goto lb_init3_yyy; \
CountCase(init_seq3_y): erts_instr_count[277]++; goto lb_init_seq3_y; \
CountCase(init_seq4_y): erts_instr_count[278]++; goto lb_init_seq4_y; \
CountCase(init_seq5_y): erts_instr_count[279]++; goto lb_init_seq5_y; \
CountCase(int_code_end): erts_instr_count[280]++; goto lb_int_code_end; \
CountCase(is_atom_fx): erts_instr_count[281]++; goto lb_is_atom_fx; \
CountCase(is_atom_fy): erts_instr_count[282]++; goto lb_is_atom_fy; \
CountCase(is_binary_fx): erts_instr_count[283]++; goto lb_is_binary_fx; \
CountCase(is_binary_fy): erts_instr_count[284]++; goto lb_is_binary_fy; \
CountCase(is_bitstring_fx): erts_instr_count[285]++; goto lb_is_bitstring_fx; \
CountCase(is_bitstring_fy): erts_instr_count[286]++; goto lb_is_bitstring_fy; \
CountCase(is_boolean_fx): erts_instr_count[287]++; goto lb_is_boolean_fx; \
CountCase(is_boolean_fy): erts_instr_count[288]++; goto lb_is_boolean_fy; \
CountCase(is_eq_fSs): erts_instr_count[289]++; goto lb_is_eq_fSs; \
CountCase(is_eq_exact_fxx): erts_instr_count[290]++; goto lb_is_eq_exact_fxx; \
CountCase(is_eq_exact_fxy): erts_instr_count[291]++; goto lb_is_eq_exact_fxy; \
CountCase(is_eq_exact_fyy): erts_instr_count[292]++; goto lb_is_eq_exact_fyy; \
CountCase(is_float_fx): erts_instr_count[293]++; goto lb_is_float_fx; \
CountCase(is_float_fy): erts_instr_count[294]++; goto lb_is_float_fy; \
CountCase(is_function_fx): erts_instr_count[295]++; goto lb_is_function_fx; \
CountCase(is_function_fy): erts_instr_count[296]++; goto lb_is_function_fy; \
CountCase(is_ge_fxx): erts_instr_count[297]++; goto lb_is_ge_fxx; \
CountCase(is_ge_fxc): erts_instr_count[298]++; goto lb_is_ge_fxc; \
CountCase(is_ge_fcx): erts_instr_count[299]++; goto lb_is_ge_fcx; \
CountCase(is_ge_fss): erts_instr_count[300]++; goto lb_is_ge_fss; \
CountCase(is_integer_fx): erts_instr_count[301]++; goto lb_is_integer_fx; \
CountCase(is_integer_fy): erts_instr_count[302]++; goto lb_is_integer_fy; \
CountCase(is_integer_allocate_fxtt): erts_instr_count[303]++; goto lb_is_integer_allocate_fxtt; \
CountCase(is_list_fx): erts_instr_count[304]++; goto lb_is_list_fx; \
CountCase(is_list_fy): erts_instr_count[305]++; goto lb_is_list_fy; \
CountCase(is_lt_fxx): erts_instr_count[306]++; goto lb_is_lt_fxx; \
CountCase(is_lt_fxc): erts_instr_count[307]++; goto lb_is_lt_fxc; \
CountCase(is_lt_fcx): erts_instr_count[308]++; goto lb_is_lt_fcx; \
CountCase(is_lt_fss): erts_instr_count[309]++; goto lb_is_lt_fss; \
CountCase(is_map_fx): erts_instr_count[310]++; goto lb_is_map_fx; \
CountCase(is_map_fy): erts_instr_count[311]++; goto lb_is_map_fy; \
CountCase(is_ne_fSs): erts_instr_count[312]++; goto lb_is_ne_fSs; \
CountCase(is_ne_exact_fSS): erts_instr_count[313]++; goto lb_is_ne_exact_fSS; \
CountCase(is_nil_fx): erts_instr_count[314]++; goto lb_is_nil_fx; \
CountCase(is_nil_fy): erts_instr_count[315]++; goto lb_is_nil_fy; \
CountCase(is_nonempty_list_fx): erts_instr_count[316]++; goto lb_is_nonempty_list_fx; \
CountCase(is_nonempty_list_fy): erts_instr_count[317]++; goto lb_is_nonempty_list_fy; \
CountCase(is_nonempty_list_allocate_frtt): erts_instr_count[318]++; goto lb_is_nonempty_list_allocate_frtt; \
CountCase(is_nonempty_list_allocate_fxtt): erts_instr_count[319]++; goto lb_is_nonempty_list_allocate_fxtt; \
CountCase(is_nonempty_list_get_hd_fxx): erts_instr_count[320]++; goto lb_is_nonempty_list_get_hd_fxx; \
CountCase(is_nonempty_list_get_list_frxx): erts_instr_count[321]++; goto lb_is_nonempty_list_get_list_frxx; \
CountCase(is_nonempty_list_get_list_fxxx): erts_instr_count[322]++; goto lb_is_nonempty_list_get_list_fxxx; \
CountCase(is_nonempty_list_get_tl_fxx): erts_instr_count[323]++; goto lb_is_nonempty_list_get_tl_fxx; \
CountCase(is_number_fx): erts_instr_count[324]++; goto lb_is_number_fx; \
CountCase(is_number_fy): erts_instr_count[325]++; goto lb_is_number_fy; \
CountCase(is_pid_fx): erts_instr_count[326]++; goto lb_is_pid_fx; \
CountCase(is_pid_fy): erts_instr_count[327]++; goto lb_is_pid_fy; \
CountCase(is_port_fx): erts_instr_count[328]++; goto lb_is_port_fx; \
CountCase(is_port_fy): erts_instr_count[329]++; goto lb_is_port_fy; \
CountCase(is_reference_fx): erts_instr_count[330]++; goto lb_is_reference_fx; \
CountCase(is_reference_fy): erts_instr_count[331]++; goto lb_is_reference_fy; \
CountCase(is_tagged_tuple_frAa): erts_instr_count[332]++; goto lb_is_tagged_tuple_frAa; \
CountCase(is_tagged_tuple_fxAa): erts_instr_count[333]++; goto lb_is_tagged_tuple_fxAa; \
CountCase(is_tagged_tuple_fyAa): erts_instr_count[334]++; goto lb_is_tagged_tuple_fyAa; \
CountCase(is_tagged_tuple_ff_ffrAa): erts_instr_count[335]++; goto lb_is_tagged_tuple_ff_ffrAa; \
CountCase(is_tagged_tuple_ff_ffxAa): erts_instr_count[336]++; goto lb_is_tagged_tuple_ff_ffxAa; \
CountCase(is_tuple_fr): erts_instr_count[337]++; goto lb_is_tuple_fr; \
CountCase(is_tuple_fx): erts_instr_count[338]++; goto lb_is_tuple_fx; \
CountCase(is_tuple_fy): erts_instr_count[339]++; goto lb_is_tuple_fy; \
CountCase(is_tuple_of_arity_frA): erts_instr_count[340]++; goto lb_is_tuple_of_arity_frA; \
CountCase(is_tuple_of_arity_fxA): erts_instr_count[341]++; goto lb_is_tuple_of_arity_fxA; \
CountCase(is_tuple_of_arity_fyA): erts_instr_count[342]++; goto lb_is_tuple_of_arity_fyA; \
CountCase(jump_f): erts_instr_count[343]++; goto lb_jump_f; \
CountCase(label_L): erts_instr_count[344]++; goto lb_label_L; \
CountCase(line_I): erts_instr_count[345]++; goto lb_line_I; \
CountCase(loop_rec_end_f): erts_instr_count[346]++; goto lb_loop_rec_end_f; \
CountCase(move_nx): erts_instr_count[347]++; goto lb_move_nx; \
CountCase(move_rx): erts_instr_count[348]++; goto lb_move_rx; \
CountCase(move_ry): erts_instr_count[349]++; goto lb_move_ry; \
CountCase(move_xr): erts_instr_count[350]++; goto lb_move_xr; \
CountCase(move_xx): erts_instr_count[351]++; goto lb_move_xx; \
CountCase(move_xy): erts_instr_count[352]++; goto lb_move_xy; \
CountCase(move_yr): erts_instr_count[353]++; goto lb_move_yr; \
CountCase(move_yx): erts_instr_count[354]++; goto lb_move_yx; \
CountCase(move_yy): erts_instr_count[355]++; goto lb_move_yy; \
CountCase(move_cr): erts_instr_count[356]++; goto lb_move_cr; \
CountCase(move_cx): erts_instr_count[357]++; goto lb_move_cx; \
CountCase(move_cy): erts_instr_count[358]++; goto lb_move_cy; \
CountCase(move2_par_xxxx): erts_instr_count[359]++; goto lb_move2_par_xxxx; \
CountCase(move2_par_xxxy): erts_instr_count[360]++; goto lb_move2_par_xxxy; \
CountCase(move2_par_yxxx): erts_instr_count[361]++; goto lb_move2_par_yxxx; \
CountCase(move2_par_yxxy): erts_instr_count[362]++; goto lb_move2_par_yxxy; \
CountCase(move2_par_yxyx): erts_instr_count[363]++; goto lb_move2_par_yxyx; \
CountCase(move3_xxxxxx): erts_instr_count[364]++; goto lb_move3_xxxxxx; \
CountCase(move3_yxyxyx): erts_instr_count[365]++; goto lb_move3_yxyxyx; \
CountCase(move_call_xf): erts_instr_count[366]++; goto lb_move_call_xf; \
CountCase(move_call_yf): erts_instr_count[367]++; goto lb_move_call_yf; \
CountCase(move_call_cf): erts_instr_count[368]++; goto lb_move_call_cf; \
CountCase(move_call_last_xfQ): erts_instr_count[369]++; goto lb_move_call_last_xfQ; \
CountCase(move_call_last_yfQ): erts_instr_count[370]++; goto lb_move_call_last_yfQ; \
CountCase(move_call_last_cfQ): erts_instr_count[371]++; goto lb_move_call_last_cfQ; \
CountCase(move_call_only_xf): erts_instr_count[372]++; goto lb_move_call_only_xf; \
CountCase(move_call_only_cf): erts_instr_count[373]++; goto lb_move_call_only_cf; \
CountCase(move_deallocate_return_nQ): erts_instr_count[374]++; goto lb_move_deallocate_return_nQ; \
CountCase(move_deallocate_return_xQ): erts_instr_count[375]++; goto lb_move_deallocate_return_xQ; \
CountCase(move_deallocate_return_yQ): erts_instr_count[376]++; goto lb_move_deallocate_return_yQ; \
CountCase(move_deallocate_return_cQ): erts_instr_count[377]++; goto lb_move_deallocate_return_cQ; \
CountCase(move_jump_fxx): erts_instr_count[378]++; goto lb_move_jump_fxx; \
CountCase(move_jump_fxy): erts_instr_count[379]++; goto lb_move_jump_fxy; \
CountCase(move_jump_fyx): erts_instr_count[380]++; goto lb_move_jump_fyx; \
CountCase(move_jump_fyy): erts_instr_count[381]++; goto lb_move_jump_fyy; \
CountCase(move_jump_fcr): erts_instr_count[382]++; goto lb_move_jump_fcr; \
CountCase(move_jump_fcx): erts_instr_count[383]++; goto lb_move_jump_fcx; \
CountCase(move_jump_fcy): erts_instr_count[384]++; goto lb_move_jump_fcy; \
CountCase(move_return_n): erts_instr_count[385]++; goto lb_move_return_n; \
CountCase(move_return_x): erts_instr_count[386]++; goto lb_move_return_x; \
CountCase(move_return_c): erts_instr_count[387]++; goto lb_move_return_c; \
CountCase(move_shift_nyx): erts_instr_count[388]++; goto lb_move_shift_nyx; \
CountCase(move_shift_xxx): erts_instr_count[389]++; goto lb_move_shift_xxx; \
CountCase(move_shift_xxy): erts_instr_count[390]++; goto lb_move_shift_xxy; \
CountCase(move_shift_xyx): erts_instr_count[391]++; goto lb_move_shift_xyx; \
CountCase(move_shift_yry): erts_instr_count[392]++; goto lb_move_shift_yry; \
CountCase(move_shift_yxx): erts_instr_count[393]++; goto lb_move_shift_yxx; \
CountCase(move_shift_cxx): erts_instr_count[394]++; goto lb_move_shift_cxx; \
CountCase(move_src_window2_yxx): erts_instr_count[395]++; goto lb_move_src_window2_yxx; \
CountCase(move_src_window3_yxxx): erts_instr_count[396]++; goto lb_move_src_window3_yxxx; \
CountCase(move_src_window4_yxxxx): erts_instr_count[397]++; goto lb_move_src_window4_yxxxx; \
CountCase(move_trim_yxt): erts_instr_count[398]++; goto lb_move_trim_yxt; \
CountCase(move_window2_xxy): erts_instr_count[399]++; goto lb_move_window2_xxy; \
CountCase(move_window3_xxxy): erts_instr_count[400]++; goto lb_move_window3_xxxy; \
CountCase(move_window4_xxxxy): erts_instr_count[401]++; goto lb_move_window4_xxxxy; \
CountCase(move_window5_xxxxxy): erts_instr_count[402]++; goto lb_move_window5_xxxxxy; \
CountCase(move_x1_c): erts_instr_count[403]++; goto lb_move_x1_c; \
CountCase(move_x2_c): erts_instr_count[404]++; goto lb_move_x2_c; \
CountCase(new_map_dtI): erts_instr_count[405]++; goto lb_new_map_dtI; \
CountCase(node_x): erts_instr_count[406]++; goto lb_node_x; \
CountCase(node_y): erts_instr_count[407]++; goto lb_node_y; \
CountCase(normal_exit): erts_instr_count[408]++; goto lb_normal_exit; \
CountCase(on_load): erts_instr_count[409]++; goto lb_on_load; \
CountCase(put_list_rnr): erts_instr_count[410]++; goto lb_put_list_rnr; \
CountCase(put_list_rnx): erts_instr_count[411]++; goto lb_put_list_rnx; \
CountCase(put_list_rxr): erts_instr_count[412]++; goto lb_put_list_rxr; \
CountCase(put_list_rxx): erts_instr_count[413]++; goto lb_put_list_rxx; \
CountCase(put_list_xnx): erts_instr_count[414]++; goto lb_put_list_xnx; \
CountCase(put_list_xny): erts_instr_count[415]++; goto lb_put_list_xny; \
CountCase(put_list_xxr): erts_instr_count[416]++; goto lb_put_list_xxr; \
CountCase(put_list_xxx): erts_instr_count[417]++; goto lb_put_list_xxx; \
CountCase(put_list_xyx): erts_instr_count[418]++; goto lb_put_list_xyx; \
CountCase(put_list_ynx): erts_instr_count[419]++; goto lb_put_list_ynx; \
CountCase(put_list_yny): erts_instr_count[420]++; goto lb_put_list_yny; \
CountCase(put_list_yxx): erts_instr_count[421]++; goto lb_put_list_yxx; \
CountCase(put_list_yyx): erts_instr_count[422]++; goto lb_put_list_yyx; \
CountCase(put_list_xcx): erts_instr_count[423]++; goto lb_put_list_xcx; \
CountCase(put_list_ycx): erts_instr_count[424]++; goto lb_put_list_ycx; \
CountCase(put_list_cxx): erts_instr_count[425]++; goto lb_put_list_cxx; \
CountCase(put_list_cyx): erts_instr_count[426]++; goto lb_put_list_cyx; \
CountCase(put_list_ssd): erts_instr_count[427]++; goto lb_put_list_ssd; \
CountCase(put_tuple2_xI): erts_instr_count[428]++; goto lb_put_tuple2_xI; \
CountCase(put_tuple2_yI): erts_instr_count[429]++; goto lb_put_tuple2_yI; \
CountCase(raw_raise): erts_instr_count[430]++; goto lb_raw_raise; \
CountCase(remove_message): erts_instr_count[431]++; goto lb_remove_message; \
CountCase(return): erts_instr_count[432]++; goto lb_return; \
CountCase(return_trace): erts_instr_count[433]++; goto lb_return_trace; \
CountCase(self_x): erts_instr_count[434]++; goto lb_self_x; \
CountCase(self_y): erts_instr_count[435]++; goto lb_self_y; \
CountCase(send): erts_instr_count[436]++; goto lb_send; \
CountCase(set_tuple_element_sSP): erts_instr_count[437]++; goto lb_set_tuple_element_sSP; \
CountCase(swap_xx): erts_instr_count[438]++; goto lb_swap_xx; \
CountCase(swap_yx): erts_instr_count[439]++; goto lb_swap_yx; \
CountCase(swap_yy): erts_instr_count[440]++; goto lb_swap_yy; \
CountCase(swap_temp_xxx): erts_instr_count[441]++; goto lb_swap_temp_xxx; \
CountCase(system_limit_j): erts_instr_count[442]++; goto lb_system_limit_j; \
CountCase(test_arity_fxA): erts_instr_count[443]++; goto lb_test_arity_fxA; \
CountCase(test_arity_fyA): erts_instr_count[444]++; goto lb_test_arity_fyA; \
CountCase(test_arity_get_tuple_element_fxAPx): erts_instr_count[445]++; goto lb_test_arity_get_tuple_element_fxAPx; \
CountCase(test_heap_It): erts_instr_count[446]++; goto lb_test_heap_It; \
CountCase(test_heap_1_put_list_Iy): erts_instr_count[447]++; goto lb_test_heap_1_put_list_Iy; \
CountCase(timeout): erts_instr_count[448]++; goto lb_timeout; \
CountCase(timeout_locked): erts_instr_count[449]++; goto lb_timeout_locked; \
CountCase(trace_jump_W): erts_instr_count[450]++; goto lb_trace_jump_W; \
CountCase(try_case_y): erts_instr_count[451]++; goto lb_try_case_y; \
CountCase(try_case_end_s): erts_instr_count[452]++; goto lb_try_case_end_s; \
CountCase(try_end_y): erts_instr_count[453]++; goto lb_try_end_y; \
CountCase(update_list_xx): erts_instr_count[454]++; goto lb_update_list_xx; \
CountCase(update_list_yx): erts_instr_count[455]++; goto lb_update_list_yx; \
CountCase(update_list_cx): erts_instr_count[456]++; goto lb_update_list_cx; \
CountCase(update_map_assoc_xdtI): erts_instr_count[457]++; goto lb_update_map_assoc_xdtI; \
CountCase(update_map_assoc_ydtI): erts_instr_count[458]++; goto lb_update_map_assoc_ydtI; \
CountCase(update_map_assoc_cdtI): erts_instr_count[459]++; goto lb_update_map_assoc_cdtI; \
CountCase(update_map_exact_xjdtI): erts_instr_count[460]++; goto lb_update_map_exact_xjdtI; \
CountCase(update_map_exact_yjdtI): erts_instr_count[461]++; goto lb_update_map_exact_yjdtI; \
CountCase(wait_locked_f): erts_instr_count[462]++; goto lb_wait_locked_f; \
CountCase(wait_timeout_locked_sf): erts_instr_count[463]++; goto lb_wait_timeout_locked_sf; \
CountCase(wait_timeout_locked_int_If): erts_instr_count[464]++; goto lb_wait_timeout_locked_int_If; \
CountCase(wait_timeout_unlocked_sf): erts_instr_count[465]++; goto lb_wait_timeout_unlocked_sf; \
CountCase(wait_timeout_unlocked_int_If): erts_instr_count[466]++; goto lb_wait_timeout_unlocked_int_If; \
CountCase(wait_unlocked_f): erts_instr_count[467]++; goto lb_wait_unlocked_f;

#define genop_label_1 1
#define genop_func_info_3 2
#define genop_int_code_end_0 3
#define genop_call_2 4
#define genop_call_last_3 5
#define genop_call_only_2 6
#define genop_call_ext_2 7
#define genop_call_ext_last_3 8
#define genop_bif0_2 9
#define genop_bif1_4 10
#define genop_bif2_5 11
#define genop_allocate_2 12
#define genop_allocate_heap_3 13
#define genop_allocate_zero_2 14
#define genop_allocate_heap_zero_3 15
#define genop_test_heap_2 16
#define genop_init_1 17
#define genop_deallocate_1 18
#define genop_return_0 19
#define genop_send_0 20
#define genop_remove_message_0 21
#define genop_timeout_0 22
#define genop_loop_rec_2 23
#define genop_loop_rec_end_1 24
#define genop_wait_1 25
#define genop_wait_timeout_2 26
#define genop_m_plus_4 27
#define genop_m_minus_4 28
#define genop_m_times_4 29
#define genop_m_div_4 30
#define genop_int_div_4 31
#define genop_int_rem_4 32
#define genop_int_band_4 33
#define genop_int_bor_4 34
#define genop_int_bxor_4 35
#define genop_int_bsl_4 36
#define genop_int_bsr_4 37
#define genop_int_bnot_3 38
#define genop_is_lt_3 39
#define genop_is_ge_3 40
#define genop_is_eq_3 41
#define genop_is_ne_3 42
#define genop_is_eq_exact_3 43
#define genop_is_ne_exact_3 44
#define genop_is_integer_2 45
#define genop_is_float_2 46
#define genop_is_number_2 47
#define genop_is_atom_2 48
#define genop_is_pid_2 49
#define genop_is_reference_2 50
#define genop_is_port_2 51
#define genop_is_nil_2 52
#define genop_is_binary_2 53
#define genop_is_constant_2 54
#define genop_is_list_2 55
#define genop_is_nonempty_list_2 56
#define genop_is_tuple_2 57
#define genop_test_arity_3 58
#define genop_select_val_3 59
#define genop_select_tuple_arity_3 60
#define genop_jump_1 61
#define genop_catch_2 62
#define genop_catch_end_1 63
#define genop_move_2 64
#define genop_get_list_3 65
#define genop_get_tuple_element_3 66
#define genop_set_tuple_element_3 67
#define genop_put_string_3 68
#define genop_put_list_3 69
#define genop_put_tuple_2 70
#define genop_put_1 71
#define genop_badmatch_1 72
#define genop_if_end_0 73
#define genop_case_end_1 74
#define genop_call_fun_1 75
#define genop_make_fun_3 76
#define genop_is_function_2 77
#define genop_call_ext_only_2 78
#define genop_bs_start_match_2 79
#define genop_bs_get_integer_5 80
#define genop_bs_get_float_5 81
#define genop_bs_get_binary_5 82
#define genop_bs_skip_bits_4 83
#define genop_bs_test_tail_2 84
#define genop_bs_save_1 85
#define genop_bs_restore_1 86
#define genop_bs_init_2 87
#define genop_bs_final_2 88
#define genop_bs_put_integer_5 89
#define genop_bs_put_binary_5 90
#define genop_bs_put_float_5 91
#define genop_bs_put_string_2 92
#define genop_bs_need_buf_1 93
#define genop_fclearerror_0 94
#define genop_fcheckerror_1 95
#define genop_fmove_2 96
#define genop_fconv_2 97
#define genop_fadd_4 98
#define genop_fsub_4 99
#define genop_fmul_4 100
#define genop_fdiv_4 101
#define genop_fnegate_3 102
#define genop_make_fun2_1 103
#define genop_try_2 104
#define genop_try_end_1 105
#define genop_try_case_1 106
#define genop_try_case_end_1 107
#define genop_raise_2 108
#define genop_bs_init2_6 109
#define genop_bs_bits_to_bytes_3 110
#define genop_bs_add_5 111
#define genop_apply_1 112
#define genop_apply_last_2 113
#define genop_is_boolean_2 114
#define genop_is_function2_3 115
#define genop_bs_start_match2_5 116
#define genop_bs_get_integer2_7 117
#define genop_bs_get_float2_7 118
#define genop_bs_get_binary2_7 119
#define genop_bs_skip_bits2_5 120
#define genop_bs_test_tail2_3 121
#define genop_bs_save2_2 122
#define genop_bs_restore2_2 123
#define genop_gc_bif1_5 124
#define genop_gc_bif2_6 125
#define genop_bs_final2_2 126
#define genop_bs_bits_to_bytes2_2 127
#define genop_put_literal_2 128
#define genop_is_bitstr_2 129
#define genop_bs_context_to_binary_1 130
#define genop_bs_test_unit_3 131
#define genop_bs_match_string_4 132
#define genop_bs_init_writable_0 133
#define genop_bs_append_8 134
#define genop_bs_private_append_6 135
#define genop_trim_2 136
#define genop_bs_init_bits_6 137
#define genop_bs_get_utf8_5 138
#define genop_bs_skip_utf8_4 139
#define genop_bs_get_utf16_5 140
#define genop_bs_skip_utf16_4 141
#define genop_bs_get_utf32_5 142
#define genop_bs_skip_utf32_4 143
#define genop_bs_utf8_size_3 144
#define genop_bs_put_utf8_3 145
#define genop_bs_utf16_size_3 146
#define genop_bs_put_utf16_3 147
#define genop_bs_put_utf32_3 148
#define genop_on_load_0 149
#define genop_recv_mark_1 150
#define genop_recv_set_1 151
#define genop_gc_bif3_7 152
#define genop_line_1 153
#define genop_put_map_assoc_5 154
#define genop_put_map_exact_5 155
#define genop_is_map_2 156
#define genop_has_map_fields_3 157
#define genop_get_map_elements_3 158
#define genop_is_tagged_tuple_4 159
#define genop_build_stacktrace_0 160
#define genop_raw_raise_0 161
#define genop_get_hd_2 162
#define genop_get_tl_2 163
#define genop_put_tuple2_2 164
#define genop_bs_get_tail_3 165
#define genop_bs_start_match3_4 166
#define genop_bs_get_position_3 167
#define genop_bs_set_position_2 168
#define genop_too_old_compiler_0 169
#define genop_i_func_info_4 170
#define genop_i_generic_breakpoint_0 171
#define genop_i_debug_breakpoint_0 172
#define genop_i_return_time_trace_0 173
#define genop_i_return_to_trace_0 174
#define genop_i_yield_0 175
#define genop_trace_jump_1 176
#define genop_move_trim_3 177
#define genop_i_trim_1 178
#define genop_init_seq3_1 179
#define genop_init_seq4_1 180
#define genop_init_seq5_1 181
#define genop_init2_2 182
#define genop_init3_3 183
#define genop_i_select_val_bins_3 184
#define genop_i_select_val_lins_3 185
#define genop_i_select_val2_4 186
#define genop_i_select_tuple_arity_3 187
#define genop_i_select_tuple_arity2_4 188
#define genop_i_jump_on_val_zero_3 189
#define genop_i_jump_on_val_4 190
#define genop_i_get_tuple_element_3 191
#define genop_i_get_tuple_element2_3 192
#define genop_i_get_tuple_element2_dst_4 193
#define genop_i_get_tuple_element3_3 194
#define genop_i_raise_0 195
#define genop_badarg_1 196
#define genop_system_limit_1 197
#define genop_move_jump_3 198
#define genop_move_window_5 199
#define genop_move_window_6 200
#define genop_move_window2_3 201
#define genop_move_window3_4 202
#define genop_move_window4_5 203
#define genop_move_window5_6 204
#define genop_move_src_window_4 205
#define genop_move_src_window_5 206
#define genop_move_src_window2_3 207
#define genop_move_src_window3_4 208
#define genop_move_src_window4_5 209
#define genop_swap_temp_3 210
#define genop_swap_2 211
#define genop_move_shift_3 212
#define genop_move2_par_4 213
#define genop_move3_6 214
#define genop_move_x1_1 215
#define genop_move_x2_1 216
#define genop_timeout_locked_0 217
#define genop_i_loop_rec_1 218
#define genop_wait_locked_1 219
#define genop_wait_unlocked_1 220
#define genop_wait_timeout_unlocked_int_2 221
#define genop_wait_timeout_unlocked_2 222
#define genop_wait_timeout_locked_int_2 223
#define genop_wait_timeout_locked_2 224
#define genop_i_wait_error_0 225
#define genop_i_wait_error_locked_0 226
#define genop_i_is_eq_exact_immed_3 227
#define genop_i_is_eq_exact_literal_3 228
#define genop_i_is_ne_exact_immed_3 229
#define genop_i_is_ne_exact_literal_3 230
#define genop_i_put_tuple_2 231
#define genop_update_list_2 232
#define genop_normal_exit_0 233
#define genop_continue_exit_0 234
#define genop_apply_bif_0 235
#define genop_call_nif_0 236
#define genop_call_error_handler_0 237
#define genop_error_action_code_0 238
#define genop_return_trace_0 239
#define genop_move_return_1 240
#define genop_move_deallocate_return_2 241
#define genop_deallocate_return_1 242
#define genop_test_heap_1_put_list_2 243
#define genop_is_tuple_of_arity_3 244
#define genop_test_arity_get_tuple_element_5 245
#define genop_is_tagged_tuple_ff_5 246
#define genop_is_integer_allocate_4 247
#define genop_is_nonempty_list_allocate_4 248
#define genop_is_nonempty_list_get_list_4 249
#define genop_is_nonempty_list_get_hd_3 250
#define genop_is_nonempty_list_get_tl_3 251
#define genop_is_bitstring_2 252
#define genop_cold_is_function2_3 253
#define genop_hot_is_function2_3 254
#define genop_allocate_init_3 255
#define genop_i_apply_0 256
#define genop_i_apply_last_1 257
#define genop_i_apply_only_0 258
#define genop_i_apply_fun_0 259
#define genop_i_apply_fun_last_1 260
#define genop_i_apply_fun_only_0 261
#define genop_i_hibernate_0 262
#define genop_i_perf_counter_0 263
#define genop_call_bif_1 264
#define genop_call_bif_only_1 265
#define genop_i_get_hash_3 266
#define genop_i_get_2 267
#define genop_self_1 268
#define genop_node_1 269
#define genop_i_fast_element_4 270
#define genop_i_element_4 271
#define genop_i_bif1_4 272
#define genop_i_bif1_body_3 273
#define genop_i_bif2_5 274
#define genop_i_bif2_body_4 275
#define genop_i_bif3_6 276
#define genop_i_bif3_body_5 277
#define genop_move_call_2 278
#define genop_move_call_last_3 279
#define genop_move_call_only_2 280
#define genop_i_call_1 281
#define genop_i_call_last_2 282
#define genop_i_call_only_1 283
#define genop_i_call_ext_1 284
#define genop_i_call_ext_last_2 285
#define genop_i_call_ext_only_1 286
#define genop_i_move_call_ext_2 287
#define genop_i_move_call_ext_last_3 288
#define genop_i_move_call_ext_only_2 289
#define genop_i_call_fun_1 290
#define genop_i_call_fun_last_2 291
#define genop_move_fun_2 292
#define genop_i_make_fun_2 293
#define genop_i_bs_start_match2_5 294
#define genop_i_bs_save2_2 295
#define genop_i_bs_restore2_2 296
#define genop_i_bs_match_string_4 297
#define genop_i_bs_get_integer_small_imm_5 298
#define genop_i_bs_get_integer_imm_6 299
#define genop_i_bs_get_integer_6 300
#define genop_i_bs_get_integer_8_3 301
#define genop_i_bs_get_integer_16_3 302
#define genop_i_bs_get_integer_32_3 303
#define genop_i_bs_get_binary_imm2_6 304
#define genop_i_bs_get_binary2_6 305
#define genop_i_bs_get_binary_all2_5 306
#define genop_i_bs_get_float2_6 307
#define genop_i_bs_skip_bits_imm2_3 308
#define genop_i_bs_skip_bits2_4 309
#define genop_bs_test_zero_tail2_2 310
#define genop_bs_test_tail_imm2_3 311
#define genop_bs_test_unit8_2 312
#define genop_i_bs_start_match3_gp_5 313
#define genop_i_bs_start_match3_4 314
#define genop_i_bs_get_position_2 315
#define genop_i_bs_get_utf8_3 316
#define genop_i_bs_get_utf16_4 317
#define genop_i_bs_validate_unicode_retract_3 318
#define genop_i_bs_init_fail_4 319
#define genop_i_bs_init_fail_heap_5 320
#define genop_i_bs_init_3 321
#define genop_i_bs_init_heap_4 322
#define genop_i_bs_init_bits_fail_4 323
#define genop_i_bs_init_bits_fail_heap_5 324
#define genop_i_bs_init_bits_3 325
#define genop_i_bs_init_bits_heap_4 326
#define genop_i_bs_append_6 327
#define genop_i_bs_private_append_5 328
#define genop_i_new_bs_put_integer_4 329
#define genop_i_new_bs_put_integer_imm_4 330
#define genop_i_bs_utf8_size_2 331
#define genop_i_bs_utf16_size_2 332
#define genop_i_bs_put_utf8_2 333
#define genop_i_bs_validate_unicode_2 334
#define genop_i_new_bs_put_float_4 335
#define genop_i_new_bs_put_float_imm_4 336
#define genop_i_new_bs_put_binary_4 337
#define genop_i_new_bs_put_binary_imm_3 338
#define genop_i_new_bs_put_binary_all_3 339
#define genop_fstore_2 340
#define genop_fload_2 341
#define genop_i_fadd_3 342
#define genop_i_fsub_3 343
#define genop_i_fmul_3 344
#define genop_i_fdiv_3 345
#define genop_i_fnegate_2 346
#define genop_i_put_map_assoc_4 347
#define genop_ensure_map_1 348
#define genop_sorted_put_map_assoc_4 349
#define genop_sorted_put_map_exact_5 350
#define genop_new_map_3 351
#define genop_i_new_small_map_lit_3 352
#define genop_update_map_assoc_4 353
#define genop_update_map_exact_5 354
#define genop_i_get_map_elements_3 355
#define genop_i_get_map_element_hash_5 356
#define genop_i_get_map_element_4 357
#define genop_gen_plus_5 358
#define genop_gen_minus_5 359
#define genop_i_increment_3 360
#define genop_i_plus_4 361
#define genop_i_minus_4 362
#define genop_i_times_4 363
#define genop_i_m_div_4 364
#define genop_i_int_div_4 365
#define genop_i_rem_4 366
#define genop_i_bsl_4 367
#define genop_i_bsr_4 368
#define genop_i_band_4 369
#define genop_i_bor_4 370
#define genop_i_bxor_4 371
#define genop_i_int_bnot_3 372
#define genop_i_length_setup_2 373
#define genop_i_length_3 374
#define genop_unsupported_guard_bif_3 375
#define genop_i_recv_mark_0 376
#define genop_i_recv_set_0 377
#define genop_hipe_trap_call_0 378
#define genop_hipe_trap_call_closure_0 379
#define genop_hipe_trap_return_0 380
#define genop_hipe_trap_throw_0 381
#define genop_hipe_trap_resume_0 382
#define genop_hipe_call_count_0 383
#endif
